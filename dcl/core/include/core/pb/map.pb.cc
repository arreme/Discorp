// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: map.proto

#include "map.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_map_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PBInteraction_map_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_map_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PBItemData_map_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_map_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PBUpgradeInfo_map_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_map_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PBUpgrades_map_2eproto;
class PBItemDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PBItemData> _instance;
} _PBItemData_default_instance_;
class PBItemsDictDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PBItemsDict> _instance;
} _PBItemsDict_default_instance_;
class PBUpgradeInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PBUpgradeInfo> _instance;
} _PBUpgradeInfo_default_instance_;
class PBUpgradesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PBUpgrades> _instance;
} _PBUpgrades_default_instance_;
class PBInteractionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PBInteraction> _instance;
} _PBInteraction_default_instance_;
class PBLocationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PBLocation> _instance;
} _PBLocation_default_instance_;
static void InitDefaultsscc_info_PBInteraction_map_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBInteraction_default_instance_;
    new (ptr) ::PBInteraction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBInteraction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PBInteraction_map_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PBInteraction_map_2eproto}, {
      &scc_info_PBUpgrades_map_2eproto.base,}};

static void InitDefaultsscc_info_PBItemData_map_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBItemData_default_instance_;
    new (ptr) ::PBItemData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBItemData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PBItemData_map_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PBItemData_map_2eproto}, {}};

static void InitDefaultsscc_info_PBItemsDict_map_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBItemsDict_default_instance_;
    new (ptr) ::PBItemsDict();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBItemsDict::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PBItemsDict_map_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PBItemsDict_map_2eproto}, {
      &scc_info_PBItemData_map_2eproto.base,}};

static void InitDefaultsscc_info_PBLocation_map_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBLocation_default_instance_;
    new (ptr) ::PBLocation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBLocation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PBLocation_map_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PBLocation_map_2eproto}, {
      &scc_info_PBInteraction_map_2eproto.base,}};

static void InitDefaultsscc_info_PBUpgradeInfo_map_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBUpgradeInfo_default_instance_;
    new (ptr) ::PBUpgradeInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBUpgradeInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PBUpgradeInfo_map_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PBUpgradeInfo_map_2eproto}, {
      &scc_info_PBItemData_map_2eproto.base,}};

static void InitDefaultsscc_info_PBUpgrades_map_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PBUpgrades_default_instance_;
    new (ptr) ::PBUpgrades();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PBUpgrades::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PBUpgrades_map_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PBUpgrades_map_2eproto}, {
      &scc_info_PBUpgradeInfo_map_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_map_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_map_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_map_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_map_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBItemData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PBItemData, itemid_),
  PROTOBUF_FIELD_OFFSET(::PBItemData, quantity_),
  PROTOBUF_FIELD_OFFSET(::PBItemData, imagepath_),
  PROTOBUF_FIELD_OFFSET(::PBItemData, itemname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBItemsDict, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PBItemsDict, itemtype_),
  PROTOBUF_FIELD_OFFSET(::PBItemsDict, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBUpgradeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PBUpgradeInfo, currentstat_),
  PROTOBUF_FIELD_OFFSET(::PBUpgradeInfo, uprequirements_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBUpgrades, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PBUpgrades, statname_),
  PROTOBUF_FIELD_OFFSET(::PBUpgrades, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PBInteraction, type_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, interactionname_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, resource_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, postskill_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, interactxp_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, databaseid_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, posx_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, posy_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, imagepaths_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, nextloc_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, upgradeinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PBLocation, locid_),
  PROTOBUF_FIELD_OFFSET(::PBLocation, databaseid_),
  PROTOBUF_FIELD_OFFSET(::PBLocation, interactions_),
  PROTOBUF_FIELD_OFFSET(::PBLocation, locimage_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PBItemData)},
  { 9, -1, sizeof(::PBItemsDict)},
  { 16, -1, sizeof(::PBUpgradeInfo)},
  { 23, -1, sizeof(::PBUpgrades)},
  { 30, -1, sizeof(::PBInteraction)},
  { 46, -1, sizeof(::PBLocation)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PBItemData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PBItemsDict_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PBUpgradeInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PBUpgrades_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PBInteraction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PBLocation_default_instance_),
};

const char descriptor_table_protodef_map_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tmap.proto\032\016location.proto\032\nitem.proto\""
  "`\n\nPBItemData\022\033\n\006itemID\030\001 \001(\0162\013.PBItemEn"
  "um\022\020\n\010quantity\030\002 \001(\005\022\021\n\timagePath\030\003 \001(\t\022"
  "\020\n\010itemName\030\004 \001(\t\"G\n\013PBItemsDict\022\035\n\010item"
  "Type\030\001 \001(\0162\013.PBItemType\022\031\n\004data\030\002 \003(\0132\013."
  "PBItemData\"I\n\rPBUpgradeInfo\022\023\n\013currentSt"
  "at\030\003 \001(\005\022#\n\016upRequirements\030\004 \003(\0132\013.PBIte"
  "mData\"L\n\nPBUpgrades\022 \n\010statName\030\001 \001(\0162\016."
  "PBUpgradeType\022\034\n\004info\030\002 \003(\0132\016.PBUpgradeI"
  "nfo\"\247\002\n\rPBInteraction\022 \n\004type\030\001 \001(\0162\022.PB"
  "InteractionType\022\027\n\017interactionName\030\002 \001(\t"
  "\022\035\n\010resource\030\003 \001(\0162\013.PBItemEnum\022\"\n\tpostS"
  "kill\030\004 \001(\0162\017.PBPlayerSkills\022\022\n\ninteractX"
  "p\030\005 \001(\005\022\022\n\ndatabaseId\030\006 \001(\005\022\014\n\004posX\030\007 \001("
  "\005\022\014\n\004posY\030\010 \001(\005\022\022\n\nimagePaths\030\t \003(\t\022\036\n\007n"
  "extLoc\030\n \001(\0162\r.PBLocationID\022 \n\013upgradeIn"
  "fo\030\013 \003(\0132\013.PBUpgrades\"v\n\nPBLocation\022\034\n\005l"
  "ocID\030\001 \001(\0162\r.PBLocationID\022\022\n\ndatabaseId\030"
  "\002 \001(\005\022$\n\014interactions\030\003 \003(\0132\016.PBInteract"
  "ion\022\020\n\010locImage\030\004 \001(\t*>\n\021PBInteractionTy"
  "pe\022\010\n\004POST\020\000\022\017\n\013ZONE_ACCESS\020\001\022\016\n\nDECORAT"
  "ION\020\002*K\n\rPBUpgradeType\022\014\n\010CAPACITY\020\000\022\016\n\n"
  "GEN_SECOND\020\001\022\013\n\007FORTUNE\020\002\022\017\n\013ZONE_UNLOCK"
  "\020\003*C\n\016PBPlayerSkills\022\n\n\006FORAGE\020\000\022\n\n\006MINI"
  "NG\020\001\022\n\n\006COMBAT\020\002\022\r\n\tATHLETICS\020\003b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_map_2eproto_deps[2] = {
  &::descriptor_table_item_2eproto,
  &::descriptor_table_location_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_map_2eproto_sccs[6] = {
  &scc_info_PBInteraction_map_2eproto.base,
  &scc_info_PBItemData_map_2eproto.base,
  &scc_info_PBItemsDict_map_2eproto.base,
  &scc_info_PBLocation_map_2eproto.base,
  &scc_info_PBUpgradeInfo_map_2eproto.base,
  &scc_info_PBUpgrades_map_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_map_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_map_2eproto = {
  false, false, descriptor_table_protodef_map_2eproto, "map.proto", 999,
  &descriptor_table_map_2eproto_once, descriptor_table_map_2eproto_sccs, descriptor_table_map_2eproto_deps, 6, 2,
  schemas, file_default_instances, TableStruct_map_2eproto::offsets,
  file_level_metadata_map_2eproto, 6, file_level_enum_descriptors_map_2eproto, file_level_service_descriptors_map_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_map_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_map_2eproto)), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBInteractionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_map_2eproto);
  return file_level_enum_descriptors_map_2eproto[0];
}
bool PBInteractionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBUpgradeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_map_2eproto);
  return file_level_enum_descriptors_map_2eproto[1];
}
bool PBUpgradeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBPlayerSkills_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_map_2eproto);
  return file_level_enum_descriptors_map_2eproto[2];
}
bool PBPlayerSkills_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PBItemData::InitAsDefaultInstance() {
}
class PBItemData::_Internal {
 public:
};

PBItemData::PBItemData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PBItemData)
}
PBItemData::PBItemData(const PBItemData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imagepath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imagepath().empty()) {
    imagepath_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_imagepath(),
      GetArena());
  }
  itemname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_itemname().empty()) {
    itemname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_itemname(),
      GetArena());
  }
  ::memcpy(&itemid_, &from.itemid_,
    static_cast<size_t>(reinterpret_cast<char*>(&quantity_) -
    reinterpret_cast<char*>(&itemid_)) + sizeof(quantity_));
  // @@protoc_insertion_point(copy_constructor:PBItemData)
}

void PBItemData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PBItemData_map_2eproto.base);
  imagepath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  itemname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&itemid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quantity_) -
      reinterpret_cast<char*>(&itemid_)) + sizeof(quantity_));
}

PBItemData::~PBItemData() {
  // @@protoc_insertion_point(destructor:PBItemData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PBItemData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  imagepath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  itemname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PBItemData::ArenaDtor(void* object) {
  PBItemData* _this = reinterpret_cast< PBItemData* >(object);
  (void)_this;
}
void PBItemData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PBItemData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PBItemData& PBItemData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PBItemData_map_2eproto.base);
  return *internal_default_instance();
}


void PBItemData::Clear() {
// @@protoc_insertion_point(message_clear_start:PBItemData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imagepath_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  itemname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&itemid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quantity_) -
      reinterpret_cast<char*>(&itemid_)) + sizeof(quantity_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBItemData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PBItemEnum itemID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_itemid(static_cast<::PBItemEnum>(val));
        } else goto handle_unusual;
        continue;
      // int32 quantity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          quantity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string imagePath = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_imagepath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PBItemData.imagePath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string itemName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_itemname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PBItemData.itemName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PBItemData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBItemData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBItemEnum itemID = 1;
  if (this->itemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_itemid(), target);
  }

  // int32 quantity = 2;
  if (this->quantity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_quantity(), target);
  }

  // string imagePath = 3;
  if (this->imagepath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_imagepath().data(), static_cast<int>(this->_internal_imagepath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBItemData.imagePath");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_imagepath(), target);
  }

  // string itemName = 4;
  if (this->itemname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_itemname().data(), static_cast<int>(this->_internal_itemname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBItemData.itemName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_itemname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBItemData)
  return target;
}

size_t PBItemData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBItemData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string imagePath = 3;
  if (this->imagepath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_imagepath());
  }

  // string itemName = 4;
  if (this->itemname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_itemname());
  }

  // .PBItemEnum itemID = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_itemid());
  }

  // int32 quantity = 2;
  if (this->quantity() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_quantity());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBItemData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBItemData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBItemData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PBItemData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBItemData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBItemData)
    MergeFrom(*source);
  }
}

void PBItemData::MergeFrom(const PBItemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBItemData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imagepath().size() > 0) {
    _internal_set_imagepath(from._internal_imagepath());
  }
  if (from.itemname().size() > 0) {
    _internal_set_itemname(from._internal_itemname());
  }
  if (from.itemid() != 0) {
    _internal_set_itemid(from._internal_itemid());
  }
  if (from.quantity() != 0) {
    _internal_set_quantity(from._internal_quantity());
  }
}

void PBItemData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBItemData::CopyFrom(const PBItemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBItemData::IsInitialized() const {
  return true;
}

void PBItemData::InternalSwap(PBItemData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imagepath_.Swap(&other->imagepath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  itemname_.Swap(&other->itemname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBItemData, quantity_)
      + sizeof(PBItemData::quantity_)
      - PROTOBUF_FIELD_OFFSET(PBItemData, itemid_)>(
          reinterpret_cast<char*>(&itemid_),
          reinterpret_cast<char*>(&other->itemid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBItemData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PBItemsDict::InitAsDefaultInstance() {
}
class PBItemsDict::_Internal {
 public:
};

PBItemsDict::PBItemsDict(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PBItemsDict)
}
PBItemsDict::PBItemsDict(const PBItemsDict& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  itemtype_ = from.itemtype_;
  // @@protoc_insertion_point(copy_constructor:PBItemsDict)
}

void PBItemsDict::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PBItemsDict_map_2eproto.base);
  itemtype_ = 0;
}

PBItemsDict::~PBItemsDict() {
  // @@protoc_insertion_point(destructor:PBItemsDict)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PBItemsDict::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PBItemsDict::ArenaDtor(void* object) {
  PBItemsDict* _this = reinterpret_cast< PBItemsDict* >(object);
  (void)_this;
}
void PBItemsDict::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PBItemsDict::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PBItemsDict& PBItemsDict::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PBItemsDict_map_2eproto.base);
  return *internal_default_instance();
}


void PBItemsDict::Clear() {
// @@protoc_insertion_point(message_clear_start:PBItemsDict)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  itemtype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBItemsDict::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PBItemType itemType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_itemtype(static_cast<::PBItemType>(val));
        } else goto handle_unusual;
        continue;
      // repeated .PBItemData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PBItemsDict::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBItemsDict)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBItemType itemType = 1;
  if (this->itemtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_itemtype(), target);
  }

  // repeated .PBItemData data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBItemsDict)
  return target;
}

size_t PBItemsDict::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBItemsDict)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBItemData data = 2;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .PBItemType itemType = 1;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_itemtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBItemsDict::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBItemsDict)
  GOOGLE_DCHECK_NE(&from, this);
  const PBItemsDict* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PBItemsDict>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBItemsDict)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBItemsDict)
    MergeFrom(*source);
  }
}

void PBItemsDict::MergeFrom(const PBItemsDict& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBItemsDict)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.itemtype() != 0) {
    _internal_set_itemtype(from._internal_itemtype());
  }
}

void PBItemsDict::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBItemsDict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBItemsDict::CopyFrom(const PBItemsDict& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBItemsDict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBItemsDict::IsInitialized() const {
  return true;
}

void PBItemsDict::InternalSwap(PBItemsDict* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  swap(itemtype_, other->itemtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBItemsDict::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PBUpgradeInfo::InitAsDefaultInstance() {
}
class PBUpgradeInfo::_Internal {
 public:
};

PBUpgradeInfo::PBUpgradeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  uprequirements_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PBUpgradeInfo)
}
PBUpgradeInfo::PBUpgradeInfo(const PBUpgradeInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      uprequirements_(from.uprequirements_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  currentstat_ = from.currentstat_;
  // @@protoc_insertion_point(copy_constructor:PBUpgradeInfo)
}

void PBUpgradeInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PBUpgradeInfo_map_2eproto.base);
  currentstat_ = 0;
}

PBUpgradeInfo::~PBUpgradeInfo() {
  // @@protoc_insertion_point(destructor:PBUpgradeInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PBUpgradeInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PBUpgradeInfo::ArenaDtor(void* object) {
  PBUpgradeInfo* _this = reinterpret_cast< PBUpgradeInfo* >(object);
  (void)_this;
}
void PBUpgradeInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PBUpgradeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PBUpgradeInfo& PBUpgradeInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PBUpgradeInfo_map_2eproto.base);
  return *internal_default_instance();
}


void PBUpgradeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBUpgradeInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uprequirements_.Clear();
  currentstat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBUpgradeInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 currentStat = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          currentstat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .PBItemData upRequirements = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_uprequirements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PBUpgradeInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBUpgradeInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 currentStat = 3;
  if (this->currentstat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_currentstat(), target);
  }

  // repeated .PBItemData upRequirements = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_uprequirements_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_uprequirements(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBUpgradeInfo)
  return target;
}

size_t PBUpgradeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBUpgradeInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBItemData upRequirements = 4;
  total_size += 1UL * this->_internal_uprequirements_size();
  for (const auto& msg : this->uprequirements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 currentStat = 3;
  if (this->currentstat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_currentstat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBUpgradeInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBUpgradeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PBUpgradeInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PBUpgradeInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBUpgradeInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBUpgradeInfo)
    MergeFrom(*source);
  }
}

void PBUpgradeInfo::MergeFrom(const PBUpgradeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBUpgradeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uprequirements_.MergeFrom(from.uprequirements_);
  if (from.currentstat() != 0) {
    _internal_set_currentstat(from._internal_currentstat());
  }
}

void PBUpgradeInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBUpgradeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBUpgradeInfo::CopyFrom(const PBUpgradeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBUpgradeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBUpgradeInfo::IsInitialized() const {
  return true;
}

void PBUpgradeInfo::InternalSwap(PBUpgradeInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uprequirements_.InternalSwap(&other->uprequirements_);
  swap(currentstat_, other->currentstat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBUpgradeInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PBUpgrades::InitAsDefaultInstance() {
}
class PBUpgrades::_Internal {
 public:
};

PBUpgrades::PBUpgrades(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  info_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PBUpgrades)
}
PBUpgrades::PBUpgrades(const PBUpgrades& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      info_(from.info_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  statname_ = from.statname_;
  // @@protoc_insertion_point(copy_constructor:PBUpgrades)
}

void PBUpgrades::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PBUpgrades_map_2eproto.base);
  statname_ = 0;
}

PBUpgrades::~PBUpgrades() {
  // @@protoc_insertion_point(destructor:PBUpgrades)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PBUpgrades::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PBUpgrades::ArenaDtor(void* object) {
  PBUpgrades* _this = reinterpret_cast< PBUpgrades* >(object);
  (void)_this;
}
void PBUpgrades::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PBUpgrades::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PBUpgrades& PBUpgrades::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PBUpgrades_map_2eproto.base);
  return *internal_default_instance();
}


void PBUpgrades::Clear() {
// @@protoc_insertion_point(message_clear_start:PBUpgrades)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  statname_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBUpgrades::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PBUpgradeType statName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_statname(static_cast<::PBUpgradeType>(val));
        } else goto handle_unusual;
        continue;
      // repeated .PBUpgradeInfo info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PBUpgrades::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBUpgrades)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBUpgradeType statName = 1;
  if (this->statname() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_statname(), target);
  }

  // repeated .PBUpgradeInfo info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_info_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_info(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBUpgrades)
  return target;
}

size_t PBUpgrades::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBUpgrades)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBUpgradeInfo info = 2;
  total_size += 1UL * this->_internal_info_size();
  for (const auto& msg : this->info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .PBUpgradeType statName = 1;
  if (this->statname() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_statname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBUpgrades::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBUpgrades)
  GOOGLE_DCHECK_NE(&from, this);
  const PBUpgrades* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PBUpgrades>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBUpgrades)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBUpgrades)
    MergeFrom(*source);
  }
}

void PBUpgrades::MergeFrom(const PBUpgrades& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBUpgrades)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.statname() != 0) {
    _internal_set_statname(from._internal_statname());
  }
}

void PBUpgrades::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBUpgrades)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBUpgrades::CopyFrom(const PBUpgrades& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBUpgrades)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBUpgrades::IsInitialized() const {
  return true;
}

void PBUpgrades::InternalSwap(PBUpgrades* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  info_.InternalSwap(&other->info_);
  swap(statname_, other->statname_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBUpgrades::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PBInteraction::InitAsDefaultInstance() {
}
class PBInteraction::_Internal {
 public:
};

PBInteraction::PBInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  imagepaths_(arena),
  upgradeinfo_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PBInteraction)
}
PBInteraction::PBInteraction(const PBInteraction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      imagepaths_(from.imagepaths_),
      upgradeinfo_(from.upgradeinfo_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  interactionname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_interactionname().empty()) {
    interactionname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_interactionname(),
      GetArena());
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&nextloc_) -
    reinterpret_cast<char*>(&type_)) + sizeof(nextloc_));
  // @@protoc_insertion_point(copy_constructor:PBInteraction)
}

void PBInteraction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PBInteraction_map_2eproto.base);
  interactionname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nextloc_) -
      reinterpret_cast<char*>(&type_)) + sizeof(nextloc_));
}

PBInteraction::~PBInteraction() {
  // @@protoc_insertion_point(destructor:PBInteraction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PBInteraction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  interactionname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PBInteraction::ArenaDtor(void* object) {
  PBInteraction* _this = reinterpret_cast< PBInteraction* >(object);
  (void)_this;
}
void PBInteraction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PBInteraction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PBInteraction& PBInteraction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PBInteraction_map_2eproto.base);
  return *internal_default_instance();
}


void PBInteraction::Clear() {
// @@protoc_insertion_point(message_clear_start:PBInteraction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imagepaths_.Clear();
  upgradeinfo_.Clear();
  interactionname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nextloc_) -
      reinterpret_cast<char*>(&type_)) + sizeof(nextloc_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBInteraction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PBInteractionType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::PBInteractionType>(val));
        } else goto handle_unusual;
        continue;
      // string interactionName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_interactionname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PBInteraction.interactionName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PBItemEnum resource = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_resource(static_cast<::PBItemEnum>(val));
        } else goto handle_unusual;
        continue;
      // .PBPlayerSkills postSkill = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_postskill(static_cast<::PBPlayerSkills>(val));
        } else goto handle_unusual;
        continue;
      // int32 interactXp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          interactxp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 databaseId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          databaseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 posX = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          posx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 posY = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          posy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string imagePaths = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_imagepaths();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PBInteraction.imagePaths"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // .PBLocationID nextLoc = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_nextloc(static_cast<::PBLocationID>(val));
        } else goto handle_unusual;
        continue;
      // repeated .PBUpgrades upgradeInfo = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_upgradeinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PBInteraction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBInteraction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBInteractionType type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string interactionName = 2;
  if (this->interactionname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_interactionname().data(), static_cast<int>(this->_internal_interactionname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBInteraction.interactionName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_interactionname(), target);
  }

  // .PBItemEnum resource = 3;
  if (this->resource() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_resource(), target);
  }

  // .PBPlayerSkills postSkill = 4;
  if (this->postskill() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_postskill(), target);
  }

  // int32 interactXp = 5;
  if (this->interactxp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_interactxp(), target);
  }

  // int32 databaseId = 6;
  if (this->databaseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_databaseid(), target);
  }

  // int32 posX = 7;
  if (this->posx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_posx(), target);
  }

  // int32 posY = 8;
  if (this->posy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_posy(), target);
  }

  // repeated string imagePaths = 9;
  for (int i = 0, n = this->_internal_imagepaths_size(); i < n; i++) {
    const auto& s = this->_internal_imagepaths(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBInteraction.imagePaths");
    target = stream->WriteString(9, s, target);
  }

  // .PBLocationID nextLoc = 10;
  if (this->nextloc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_nextloc(), target);
  }

  // repeated .PBUpgrades upgradeInfo = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_upgradeinfo_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, this->_internal_upgradeinfo(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBInteraction)
  return target;
}

size_t PBInteraction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBInteraction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string imagePaths = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(imagepaths_.size());
  for (int i = 0, n = imagepaths_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      imagepaths_.Get(i));
  }

  // repeated .PBUpgrades upgradeInfo = 11;
  total_size += 1UL * this->_internal_upgradeinfo_size();
  for (const auto& msg : this->upgradeinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string interactionName = 2;
  if (this->interactionname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_interactionname());
  }

  // .PBInteractionType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .PBItemEnum resource = 3;
  if (this->resource() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_resource());
  }

  // .PBPlayerSkills postSkill = 4;
  if (this->postskill() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_postskill());
  }

  // int32 interactXp = 5;
  if (this->interactxp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_interactxp());
  }

  // int32 databaseId = 6;
  if (this->databaseid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_databaseid());
  }

  // int32 posX = 7;
  if (this->posx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_posx());
  }

  // int32 posY = 8;
  if (this->posy() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_posy());
  }

  // .PBLocationID nextLoc = 10;
  if (this->nextloc() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_nextloc());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBInteraction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBInteraction)
  GOOGLE_DCHECK_NE(&from, this);
  const PBInteraction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PBInteraction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBInteraction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBInteraction)
    MergeFrom(*source);
  }
}

void PBInteraction::MergeFrom(const PBInteraction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBInteraction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  imagepaths_.MergeFrom(from.imagepaths_);
  upgradeinfo_.MergeFrom(from.upgradeinfo_);
  if (from.interactionname().size() > 0) {
    _internal_set_interactionname(from._internal_interactionname());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.resource() != 0) {
    _internal_set_resource(from._internal_resource());
  }
  if (from.postskill() != 0) {
    _internal_set_postskill(from._internal_postskill());
  }
  if (from.interactxp() != 0) {
    _internal_set_interactxp(from._internal_interactxp());
  }
  if (from.databaseid() != 0) {
    _internal_set_databaseid(from._internal_databaseid());
  }
  if (from.posx() != 0) {
    _internal_set_posx(from._internal_posx());
  }
  if (from.posy() != 0) {
    _internal_set_posy(from._internal_posy());
  }
  if (from.nextloc() != 0) {
    _internal_set_nextloc(from._internal_nextloc());
  }
}

void PBInteraction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBInteraction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBInteraction::CopyFrom(const PBInteraction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBInteraction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBInteraction::IsInitialized() const {
  return true;
}

void PBInteraction::InternalSwap(PBInteraction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imagepaths_.InternalSwap(&other->imagepaths_);
  upgradeinfo_.InternalSwap(&other->upgradeinfo_);
  interactionname_.Swap(&other->interactionname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBInteraction, nextloc_)
      + sizeof(PBInteraction::nextloc_)
      - PROTOBUF_FIELD_OFFSET(PBInteraction, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBInteraction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PBLocation::InitAsDefaultInstance() {
}
class PBLocation::_Internal {
 public:
};

PBLocation::PBLocation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  interactions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PBLocation)
}
PBLocation::PBLocation(const PBLocation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      interactions_(from.interactions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  locimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_locimage().empty()) {
    locimage_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_locimage(),
      GetArena());
  }
  ::memcpy(&locid_, &from.locid_,
    static_cast<size_t>(reinterpret_cast<char*>(&databaseid_) -
    reinterpret_cast<char*>(&locid_)) + sizeof(databaseid_));
  // @@protoc_insertion_point(copy_constructor:PBLocation)
}

void PBLocation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PBLocation_map_2eproto.base);
  locimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&locid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&databaseid_) -
      reinterpret_cast<char*>(&locid_)) + sizeof(databaseid_));
}

PBLocation::~PBLocation() {
  // @@protoc_insertion_point(destructor:PBLocation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PBLocation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  locimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PBLocation::ArenaDtor(void* object) {
  PBLocation* _this = reinterpret_cast< PBLocation* >(object);
  (void)_this;
}
void PBLocation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PBLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PBLocation& PBLocation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PBLocation_map_2eproto.base);
  return *internal_default_instance();
}


void PBLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLocation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interactions_.Clear();
  locimage_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&locid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&databaseid_) -
      reinterpret_cast<char*>(&locid_)) + sizeof(databaseid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBLocation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PBLocationID locID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_locid(static_cast<::PBLocationID>(val));
        } else goto handle_unusual;
        continue;
      // int32 databaseId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          databaseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .PBInteraction interactions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_interactions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string locImage = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_locimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PBLocation.locImage"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PBLocation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBLocation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocationID locID = 1;
  if (this->locid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_locid(), target);
  }

  // int32 databaseId = 2;
  if (this->databaseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_databaseid(), target);
  }

  // repeated .PBInteraction interactions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_interactions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_interactions(i), target, stream);
  }

  // string locImage = 4;
  if (this->locimage().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_locimage().data(), static_cast<int>(this->_internal_locimage().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBLocation.locImage");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_locimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBLocation)
  return target;
}

size_t PBLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLocation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBInteraction interactions = 3;
  total_size += 1UL * this->_internal_interactions_size();
  for (const auto& msg : this->interactions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string locImage = 4;
  if (this->locimage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_locimage());
  }

  // .PBLocationID locID = 1;
  if (this->locid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_locid());
  }

  // int32 databaseId = 2;
  if (this->databaseid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_databaseid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBLocation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PBLocation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLocation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLocation)
    MergeFrom(*source);
  }
}

void PBLocation::MergeFrom(const PBLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interactions_.MergeFrom(from.interactions_);
  if (from.locimage().size() > 0) {
    _internal_set_locimage(from._internal_locimage());
  }
  if (from.locid() != 0) {
    _internal_set_locid(from._internal_locid());
  }
  if (from.databaseid() != 0) {
    _internal_set_databaseid(from._internal_databaseid());
  }
}

void PBLocation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocation::CopyFrom(const PBLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocation::IsInitialized() const {
  return true;
}

void PBLocation::InternalSwap(PBLocation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  interactions_.InternalSwap(&other->interactions_);
  locimage_.Swap(&other->locimage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBLocation, databaseid_)
      + sizeof(PBLocation::databaseid_)
      - PROTOBUF_FIELD_OFFSET(PBLocation, locid_)>(
          reinterpret_cast<char*>(&locid_),
          reinterpret_cast<char*>(&other->locid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBLocation::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PBItemData* Arena::CreateMaybeMessage< ::PBItemData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBItemData >(arena);
}
template<> PROTOBUF_NOINLINE ::PBItemsDict* Arena::CreateMaybeMessage< ::PBItemsDict >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBItemsDict >(arena);
}
template<> PROTOBUF_NOINLINE ::PBUpgradeInfo* Arena::CreateMaybeMessage< ::PBUpgradeInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBUpgradeInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::PBUpgrades* Arena::CreateMaybeMessage< ::PBUpgrades >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBUpgrades >(arena);
}
template<> PROTOBUF_NOINLINE ::PBInteraction* Arena::CreateMaybeMessage< ::PBInteraction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBInteraction >(arena);
}
template<> PROTOBUF_NOINLINE ::PBLocation* Arena::CreateMaybeMessage< ::PBLocation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBLocation >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
