// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interaction.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_interaction_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_interaction_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "player.pb.h"
#include "item.pb.h"
#include "location.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_interaction_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_interaction_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_interaction_2eproto;
class PBCustomInteraction;
class PBCustomInteractionDefaultTypeInternal;
extern PBCustomInteractionDefaultTypeInternal _PBCustomInteraction_default_instance_;
class PBDialogInfo;
class PBDialogInfoDefaultTypeInternal;
extern PBDialogInfoDefaultTypeInternal _PBDialogInfo_default_instance_;
class PBDialogInteraction;
class PBDialogInteractionDefaultTypeInternal;
extern PBDialogInteractionDefaultTypeInternal _PBDialogInteraction_default_instance_;
class PBInteraction;
class PBInteractionDefaultTypeInternal;
extern PBInteractionDefaultTypeInternal _PBInteraction_default_instance_;
class PBPostInteraction;
class PBPostInteractionDefaultTypeInternal;
extern PBPostInteractionDefaultTypeInternal _PBPostInteraction_default_instance_;
class PBQuestInteraction;
class PBQuestInteractionDefaultTypeInternal;
extern PBQuestInteractionDefaultTypeInternal _PBQuestInteraction_default_instance_;
class PBResponseOption;
class PBResponseOptionDefaultTypeInternal;
extern PBResponseOptionDefaultTypeInternal _PBResponseOption_default_instance_;
class PBShopInteraction;
class PBShopInteractionDefaultTypeInternal;
extern PBShopInteractionDefaultTypeInternal _PBShopInteraction_default_instance_;
class PBUpgradeInfo;
class PBUpgradeInfoDefaultTypeInternal;
extern PBUpgradeInfoDefaultTypeInternal _PBUpgradeInfo_default_instance_;
class PBUpgrades;
class PBUpgradesDefaultTypeInternal;
extern PBUpgradesDefaultTypeInternal _PBUpgrades_default_instance_;
class PBZoneAccessInteraction;
class PBZoneAccessInteractionDefaultTypeInternal;
extern PBZoneAccessInteractionDefaultTypeInternal _PBZoneAccessInteraction_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PBCustomInteraction* Arena::CreateMaybeMessage<::PBCustomInteraction>(Arena*);
template<> ::PBDialogInfo* Arena::CreateMaybeMessage<::PBDialogInfo>(Arena*);
template<> ::PBDialogInteraction* Arena::CreateMaybeMessage<::PBDialogInteraction>(Arena*);
template<> ::PBInteraction* Arena::CreateMaybeMessage<::PBInteraction>(Arena*);
template<> ::PBPostInteraction* Arena::CreateMaybeMessage<::PBPostInteraction>(Arena*);
template<> ::PBQuestInteraction* Arena::CreateMaybeMessage<::PBQuestInteraction>(Arena*);
template<> ::PBResponseOption* Arena::CreateMaybeMessage<::PBResponseOption>(Arena*);
template<> ::PBShopInteraction* Arena::CreateMaybeMessage<::PBShopInteraction>(Arena*);
template<> ::PBUpgradeInfo* Arena::CreateMaybeMessage<::PBUpgradeInfo>(Arena*);
template<> ::PBUpgrades* Arena::CreateMaybeMessage<::PBUpgrades>(Arena*);
template<> ::PBZoneAccessInteraction* Arena::CreateMaybeMessage<::PBZoneAccessInteraction>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum PBInteractionType : int {
  POST = 0,
  ZONE_ACCESS = 1,
  QUEST = 2,
  SHOP = 3,
  DIALOG = 4,
  CUSTOM = 5,
  PBInteractionType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  PBInteractionType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool PBInteractionType_IsValid(int value);
constexpr PBInteractionType PBInteractionType_MIN = POST;
constexpr PBInteractionType PBInteractionType_MAX = CUSTOM;
constexpr int PBInteractionType_ARRAYSIZE = PBInteractionType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBInteractionType_descriptor();
template<typename T>
inline const std::string& PBInteractionType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBInteractionType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBInteractionType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBInteractionType_descriptor(), enum_t_value);
}
inline bool PBInteractionType_Parse(
    const std::string& name, PBInteractionType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBInteractionType>(
    PBInteractionType_descriptor(), name, value);
}
enum PBUpgradeType : int {
  CAPACITY = 0,
  GEN_SECOND = 1,
  FORTUNE = 2,
  PBUpgradeType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  PBUpgradeType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool PBUpgradeType_IsValid(int value);
constexpr PBUpgradeType PBUpgradeType_MIN = CAPACITY;
constexpr PBUpgradeType PBUpgradeType_MAX = FORTUNE;
constexpr int PBUpgradeType_ARRAYSIZE = PBUpgradeType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBUpgradeType_descriptor();
template<typename T>
inline const std::string& PBUpgradeType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PBUpgradeType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PBUpgradeType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PBUpgradeType_descriptor(), enum_t_value);
}
inline bool PBUpgradeType_Parse(
    const std::string& name, PBUpgradeType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PBUpgradeType>(
    PBUpgradeType_descriptor(), name, value);
}
// ===================================================================

class PBInteraction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBInteraction) */ {
 public:
  inline PBInteraction() : PBInteraction(nullptr) {};
  virtual ~PBInteraction();

  PBInteraction(const PBInteraction& from);
  PBInteraction(PBInteraction&& from) noexcept
    : PBInteraction() {
    *this = ::std::move(from);
  }

  inline PBInteraction& operator=(const PBInteraction& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBInteraction& operator=(PBInteraction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PBInteraction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBInteraction* internal_default_instance() {
    return reinterpret_cast<const PBInteraction*>(
               &_PBInteraction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PBInteraction& a, PBInteraction& b) {
    a.Swap(&b);
  }
  inline void Swap(PBInteraction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBInteraction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PBInteraction* New() const final {
    return CreateMaybeMessage<PBInteraction>(nullptr);
  }

  PBInteraction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PBInteraction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PBInteraction& from);
  void MergeFrom(const PBInteraction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBInteraction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBInteraction";
  }
  protected:
  explicit PBInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_interaction_2eproto);
    return ::descriptor_table_interaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypesFieldNumber = 1,
    kMapIconPathsFieldNumber = 6,
    kInteractionNameFieldNumber = 3,
    kPostInfoFieldNumber = 7,
    kZoneAccessInfoFieldNumber = 8,
    kShopInfoFieldNumber = 9,
    kQuestInfoFieldNumber = 10,
    kDialogInfoFieldNumber = 11,
    kCustomInfoFieldNumber = 12,
    kDatabaseIdFieldNumber = 2,
    kPosXFieldNumber = 4,
    kPosYFieldNumber = 5,
  };
  // repeated .PBInteractionType types = 1;
  int types_size() const;
  private:
  int _internal_types_size() const;
  public:
  void clear_types();
  private:
  ::PBInteractionType _internal_types(int index) const;
  void _internal_add_types(::PBInteractionType value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_types();
  public:
  ::PBInteractionType types(int index) const;
  void set_types(int index, ::PBInteractionType value);
  void add_types(::PBInteractionType value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& types() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_types();

  // repeated string map_icon_paths = 6;
  int map_icon_paths_size() const;
  private:
  int _internal_map_icon_paths_size() const;
  public:
  void clear_map_icon_paths();
  const std::string& map_icon_paths(int index) const;
  std::string* mutable_map_icon_paths(int index);
  void set_map_icon_paths(int index, const std::string& value);
  void set_map_icon_paths(int index, std::string&& value);
  void set_map_icon_paths(int index, const char* value);
  void set_map_icon_paths(int index, const char* value, size_t size);
  std::string* add_map_icon_paths();
  void add_map_icon_paths(const std::string& value);
  void add_map_icon_paths(std::string&& value);
  void add_map_icon_paths(const char* value);
  void add_map_icon_paths(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& map_icon_paths() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_map_icon_paths();
  private:
  const std::string& _internal_map_icon_paths(int index) const;
  std::string* _internal_add_map_icon_paths();
  public:

  // string interaction_name = 3;
  void clear_interaction_name();
  const std::string& interaction_name() const;
  void set_interaction_name(const std::string& value);
  void set_interaction_name(std::string&& value);
  void set_interaction_name(const char* value);
  void set_interaction_name(const char* value, size_t size);
  std::string* mutable_interaction_name();
  std::string* release_interaction_name();
  void set_allocated_interaction_name(std::string* interaction_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_interaction_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_interaction_name(
      std::string* interaction_name);
  private:
  const std::string& _internal_interaction_name() const;
  void _internal_set_interaction_name(const std::string& value);
  std::string* _internal_mutable_interaction_name();
  public:

  // .PBPostInteraction post_info = 7;
  bool has_post_info() const;
  private:
  bool _internal_has_post_info() const;
  public:
  void clear_post_info();
  const ::PBPostInteraction& post_info() const;
  ::PBPostInteraction* release_post_info();
  ::PBPostInteraction* mutable_post_info();
  void set_allocated_post_info(::PBPostInteraction* post_info);
  private:
  const ::PBPostInteraction& _internal_post_info() const;
  ::PBPostInteraction* _internal_mutable_post_info();
  public:
  void unsafe_arena_set_allocated_post_info(
      ::PBPostInteraction* post_info);
  ::PBPostInteraction* unsafe_arena_release_post_info();

  // .PBZoneAccessInteraction zone_access_info = 8;
  bool has_zone_access_info() const;
  private:
  bool _internal_has_zone_access_info() const;
  public:
  void clear_zone_access_info();
  const ::PBZoneAccessInteraction& zone_access_info() const;
  ::PBZoneAccessInteraction* release_zone_access_info();
  ::PBZoneAccessInteraction* mutable_zone_access_info();
  void set_allocated_zone_access_info(::PBZoneAccessInteraction* zone_access_info);
  private:
  const ::PBZoneAccessInteraction& _internal_zone_access_info() const;
  ::PBZoneAccessInteraction* _internal_mutable_zone_access_info();
  public:
  void unsafe_arena_set_allocated_zone_access_info(
      ::PBZoneAccessInteraction* zone_access_info);
  ::PBZoneAccessInteraction* unsafe_arena_release_zone_access_info();

  // .PBShopInteraction shop_info = 9;
  bool has_shop_info() const;
  private:
  bool _internal_has_shop_info() const;
  public:
  void clear_shop_info();
  const ::PBShopInteraction& shop_info() const;
  ::PBShopInteraction* release_shop_info();
  ::PBShopInteraction* mutable_shop_info();
  void set_allocated_shop_info(::PBShopInteraction* shop_info);
  private:
  const ::PBShopInteraction& _internal_shop_info() const;
  ::PBShopInteraction* _internal_mutable_shop_info();
  public:
  void unsafe_arena_set_allocated_shop_info(
      ::PBShopInteraction* shop_info);
  ::PBShopInteraction* unsafe_arena_release_shop_info();

  // .PBQuestInteraction quest_info = 10;
  bool has_quest_info() const;
  private:
  bool _internal_has_quest_info() const;
  public:
  void clear_quest_info();
  const ::PBQuestInteraction& quest_info() const;
  ::PBQuestInteraction* release_quest_info();
  ::PBQuestInteraction* mutable_quest_info();
  void set_allocated_quest_info(::PBQuestInteraction* quest_info);
  private:
  const ::PBQuestInteraction& _internal_quest_info() const;
  ::PBQuestInteraction* _internal_mutable_quest_info();
  public:
  void unsafe_arena_set_allocated_quest_info(
      ::PBQuestInteraction* quest_info);
  ::PBQuestInteraction* unsafe_arena_release_quest_info();

  // .PBDialogInteraction dialog_info = 11;
  bool has_dialog_info() const;
  private:
  bool _internal_has_dialog_info() const;
  public:
  void clear_dialog_info();
  const ::PBDialogInteraction& dialog_info() const;
  ::PBDialogInteraction* release_dialog_info();
  ::PBDialogInteraction* mutable_dialog_info();
  void set_allocated_dialog_info(::PBDialogInteraction* dialog_info);
  private:
  const ::PBDialogInteraction& _internal_dialog_info() const;
  ::PBDialogInteraction* _internal_mutable_dialog_info();
  public:
  void unsafe_arena_set_allocated_dialog_info(
      ::PBDialogInteraction* dialog_info);
  ::PBDialogInteraction* unsafe_arena_release_dialog_info();

  // .PBCustomInteraction custom_info = 12;
  bool has_custom_info() const;
  private:
  bool _internal_has_custom_info() const;
  public:
  void clear_custom_info();
  const ::PBCustomInteraction& custom_info() const;
  ::PBCustomInteraction* release_custom_info();
  ::PBCustomInteraction* mutable_custom_info();
  void set_allocated_custom_info(::PBCustomInteraction* custom_info);
  private:
  const ::PBCustomInteraction& _internal_custom_info() const;
  ::PBCustomInteraction* _internal_mutable_custom_info();
  public:
  void unsafe_arena_set_allocated_custom_info(
      ::PBCustomInteraction* custom_info);
  ::PBCustomInteraction* unsafe_arena_release_custom_info();

  // int32 database_id = 2;
  void clear_database_id();
  ::PROTOBUF_NAMESPACE_ID::int32 database_id() const;
  void set_database_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_database_id() const;
  void _internal_set_database_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pos_x = 4;
  void clear_pos_x();
  ::PROTOBUF_NAMESPACE_ID::int32 pos_x() const;
  void set_pos_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pos_x() const;
  void _internal_set_pos_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pos_y = 5;
  void clear_pos_y();
  ::PROTOBUF_NAMESPACE_ID::int32 pos_y() const;
  void set_pos_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pos_y() const;
  void _internal_set_pos_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:PBInteraction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> types_;
  mutable std::atomic<int> _types_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> map_icon_paths_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr interaction_name_;
  ::PBPostInteraction* post_info_;
  ::PBZoneAccessInteraction* zone_access_info_;
  ::PBShopInteraction* shop_info_;
  ::PBQuestInteraction* quest_info_;
  ::PBDialogInteraction* dialog_info_;
  ::PBCustomInteraction* custom_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 database_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 pos_x_;
  ::PROTOBUF_NAMESPACE_ID::int32 pos_y_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interaction_2eproto;
};
// -------------------------------------------------------------------

class PBPostInteraction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBPostInteraction) */ {
 public:
  inline PBPostInteraction() : PBPostInteraction(nullptr) {};
  virtual ~PBPostInteraction();

  PBPostInteraction(const PBPostInteraction& from);
  PBPostInteraction(PBPostInteraction&& from) noexcept
    : PBPostInteraction() {
    *this = ::std::move(from);
  }

  inline PBPostInteraction& operator=(const PBPostInteraction& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBPostInteraction& operator=(PBPostInteraction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PBPostInteraction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBPostInteraction* internal_default_instance() {
    return reinterpret_cast<const PBPostInteraction*>(
               &_PBPostInteraction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PBPostInteraction& a, PBPostInteraction& b) {
    a.Swap(&b);
  }
  inline void Swap(PBPostInteraction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBPostInteraction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PBPostInteraction* New() const final {
    return CreateMaybeMessage<PBPostInteraction>(nullptr);
  }

  PBPostInteraction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PBPostInteraction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PBPostInteraction& from);
  void MergeFrom(const PBPostInteraction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBPostInteraction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBPostInteraction";
  }
  protected:
  explicit PBPostInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_interaction_2eproto);
    return ::descriptor_table_interaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourcesFieldNumber = 1,
    kUpgradesFieldNumber = 5,
    kPostSkillFieldNumber = 2,
    kInteractXpFieldNumber = 3,
    kNeedsDatabaseFieldNumber = 4,
    kCapacityUpgradeFieldNumber = 6,
    kGenSecondUpgradeFieldNumber = 7,
    kFortuneUpgradeFieldNumber = 8,
    kResourceStoredFieldNumber = 9,
  };
  // repeated .PBItemData resources = 1;
  int resources_size() const;
  private:
  int _internal_resources_size() const;
  public:
  void clear_resources();
  ::PBItemData* mutable_resources(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBItemData >*
      mutable_resources();
  private:
  const ::PBItemData& _internal_resources(int index) const;
  ::PBItemData* _internal_add_resources();
  public:
  const ::PBItemData& resources(int index) const;
  ::PBItemData* add_resources();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBItemData >&
      resources() const;

  // repeated .PBUpgrades upgrades = 5;
  int upgrades_size() const;
  private:
  int _internal_upgrades_size() const;
  public:
  void clear_upgrades();
  ::PBUpgrades* mutable_upgrades(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgrades >*
      mutable_upgrades();
  private:
  const ::PBUpgrades& _internal_upgrades(int index) const;
  ::PBUpgrades* _internal_add_upgrades();
  public:
  const ::PBUpgrades& upgrades(int index) const;
  ::PBUpgrades* add_upgrades();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgrades >&
      upgrades() const;

  // .PBPlayerSkills post_skill = 2;
  void clear_post_skill();
  ::PBPlayerSkills post_skill() const;
  void set_post_skill(::PBPlayerSkills value);
  private:
  ::PBPlayerSkills _internal_post_skill() const;
  void _internal_set_post_skill(::PBPlayerSkills value);
  public:

  // int32 interact_xp = 3;
  void clear_interact_xp();
  ::PROTOBUF_NAMESPACE_ID::int32 interact_xp() const;
  void set_interact_xp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_interact_xp() const;
  void _internal_set_interact_xp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool needs_database = 4;
  void clear_needs_database();
  bool needs_database() const;
  void set_needs_database(bool value);
  private:
  bool _internal_needs_database() const;
  void _internal_set_needs_database(bool value);
  public:

  // int32 capacity_upgrade = 6;
  void clear_capacity_upgrade();
  ::PROTOBUF_NAMESPACE_ID::int32 capacity_upgrade() const;
  void set_capacity_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_capacity_upgrade() const;
  void _internal_set_capacity_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 gen_second_upgrade = 7;
  void clear_gen_second_upgrade();
  ::PROTOBUF_NAMESPACE_ID::int32 gen_second_upgrade() const;
  void set_gen_second_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gen_second_upgrade() const;
  void _internal_set_gen_second_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 fortune_upgrade = 8;
  void clear_fortune_upgrade();
  ::PROTOBUF_NAMESPACE_ID::int32 fortune_upgrade() const;
  void set_fortune_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fortune_upgrade() const;
  void _internal_set_fortune_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 resource_stored = 9;
  void clear_resource_stored();
  ::PROTOBUF_NAMESPACE_ID::int64 resource_stored() const;
  void set_resource_stored(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_resource_stored() const;
  void _internal_set_resource_stored(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:PBPostInteraction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBItemData > resources_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgrades > upgrades_;
  int post_skill_;
  ::PROTOBUF_NAMESPACE_ID::int32 interact_xp_;
  bool needs_database_;
  ::PROTOBUF_NAMESPACE_ID::int32 capacity_upgrade_;
  ::PROTOBUF_NAMESPACE_ID::int32 gen_second_upgrade_;
  ::PROTOBUF_NAMESPACE_ID::int32 fortune_upgrade_;
  ::PROTOBUF_NAMESPACE_ID::int64 resource_stored_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interaction_2eproto;
};
// -------------------------------------------------------------------

class PBUpgrades PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBUpgrades) */ {
 public:
  inline PBUpgrades() : PBUpgrades(nullptr) {};
  virtual ~PBUpgrades();

  PBUpgrades(const PBUpgrades& from);
  PBUpgrades(PBUpgrades&& from) noexcept
    : PBUpgrades() {
    *this = ::std::move(from);
  }

  inline PBUpgrades& operator=(const PBUpgrades& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBUpgrades& operator=(PBUpgrades&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PBUpgrades& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBUpgrades* internal_default_instance() {
    return reinterpret_cast<const PBUpgrades*>(
               &_PBUpgrades_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PBUpgrades& a, PBUpgrades& b) {
    a.Swap(&b);
  }
  inline void Swap(PBUpgrades* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBUpgrades* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PBUpgrades* New() const final {
    return CreateMaybeMessage<PBUpgrades>(nullptr);
  }

  PBUpgrades* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PBUpgrades>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PBUpgrades& from);
  void MergeFrom(const PBUpgrades& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBUpgrades* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBUpgrades";
  }
  protected:
  explicit PBUpgrades(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_interaction_2eproto);
    return ::descriptor_table_interaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 2,
    kUpgradeTypeFieldNumber = 1,
  };
  // repeated .PBUpgradeInfo info = 2;
  int info_size() const;
  private:
  int _internal_info_size() const;
  public:
  void clear_info();
  ::PBUpgradeInfo* mutable_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgradeInfo >*
      mutable_info();
  private:
  const ::PBUpgradeInfo& _internal_info(int index) const;
  ::PBUpgradeInfo* _internal_add_info();
  public:
  const ::PBUpgradeInfo& info(int index) const;
  ::PBUpgradeInfo* add_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgradeInfo >&
      info() const;

  // .PBUpgradeType upgrade_type = 1;
  void clear_upgrade_type();
  ::PBUpgradeType upgrade_type() const;
  void set_upgrade_type(::PBUpgradeType value);
  private:
  ::PBUpgradeType _internal_upgrade_type() const;
  void _internal_set_upgrade_type(::PBUpgradeType value);
  public:

  // @@protoc_insertion_point(class_scope:PBUpgrades)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgradeInfo > info_;
  int upgrade_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interaction_2eproto;
};
// -------------------------------------------------------------------

class PBUpgradeInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBUpgradeInfo) */ {
 public:
  inline PBUpgradeInfo() : PBUpgradeInfo(nullptr) {};
  virtual ~PBUpgradeInfo();

  PBUpgradeInfo(const PBUpgradeInfo& from);
  PBUpgradeInfo(PBUpgradeInfo&& from) noexcept
    : PBUpgradeInfo() {
    *this = ::std::move(from);
  }

  inline PBUpgradeInfo& operator=(const PBUpgradeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBUpgradeInfo& operator=(PBUpgradeInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PBUpgradeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBUpgradeInfo* internal_default_instance() {
    return reinterpret_cast<const PBUpgradeInfo*>(
               &_PBUpgradeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PBUpgradeInfo& a, PBUpgradeInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PBUpgradeInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBUpgradeInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PBUpgradeInfo* New() const final {
    return CreateMaybeMessage<PBUpgradeInfo>(nullptr);
  }

  PBUpgradeInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PBUpgradeInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PBUpgradeInfo& from);
  void MergeFrom(const PBUpgradeInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBUpgradeInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBUpgradeInfo";
  }
  protected:
  explicit PBUpgradeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_interaction_2eproto);
    return ::descriptor_table_interaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUpgradeReqFieldNumber = 4,
    kCurrentStatFieldNumber = 3,
  };
  // repeated .PBItemData upgrade_req = 4;
  int upgrade_req_size() const;
  private:
  int _internal_upgrade_req_size() const;
  public:
  void clear_upgrade_req();
  ::PBItemData* mutable_upgrade_req(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBItemData >*
      mutable_upgrade_req();
  private:
  const ::PBItemData& _internal_upgrade_req(int index) const;
  ::PBItemData* _internal_add_upgrade_req();
  public:
  const ::PBItemData& upgrade_req(int index) const;
  ::PBItemData* add_upgrade_req();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBItemData >&
      upgrade_req() const;

  // float current_stat = 3;
  void clear_current_stat();
  float current_stat() const;
  void set_current_stat(float value);
  private:
  float _internal_current_stat() const;
  void _internal_set_current_stat(float value);
  public:

  // @@protoc_insertion_point(class_scope:PBUpgradeInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBItemData > upgrade_req_;
  float current_stat_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interaction_2eproto;
};
// -------------------------------------------------------------------

class PBZoneAccessInteraction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBZoneAccessInteraction) */ {
 public:
  inline PBZoneAccessInteraction() : PBZoneAccessInteraction(nullptr) {};
  virtual ~PBZoneAccessInteraction();

  PBZoneAccessInteraction(const PBZoneAccessInteraction& from);
  PBZoneAccessInteraction(PBZoneAccessInteraction&& from) noexcept
    : PBZoneAccessInteraction() {
    *this = ::std::move(from);
  }

  inline PBZoneAccessInteraction& operator=(const PBZoneAccessInteraction& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBZoneAccessInteraction& operator=(PBZoneAccessInteraction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PBZoneAccessInteraction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBZoneAccessInteraction* internal_default_instance() {
    return reinterpret_cast<const PBZoneAccessInteraction*>(
               &_PBZoneAccessInteraction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PBZoneAccessInteraction& a, PBZoneAccessInteraction& b) {
    a.Swap(&b);
  }
  inline void Swap(PBZoneAccessInteraction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBZoneAccessInteraction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PBZoneAccessInteraction* New() const final {
    return CreateMaybeMessage<PBZoneAccessInteraction>(nullptr);
  }

  PBZoneAccessInteraction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PBZoneAccessInteraction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PBZoneAccessInteraction& from);
  void MergeFrom(const PBZoneAccessInteraction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBZoneAccessInteraction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBZoneAccessInteraction";
  }
  protected:
  explicit PBZoneAccessInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_interaction_2eproto);
    return ::descriptor_table_interaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnlockInfoFieldNumber = 3,
    kNextLocFieldNumber = 1,
    kNeedsDatabaseFieldNumber = 2,
    kUnlockLevelFieldNumber = 4,
  };
  // repeated .PBUpgradeInfo unlock_info = 3;
  int unlock_info_size() const;
  private:
  int _internal_unlock_info_size() const;
  public:
  void clear_unlock_info();
  ::PBUpgradeInfo* mutable_unlock_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgradeInfo >*
      mutable_unlock_info();
  private:
  const ::PBUpgradeInfo& _internal_unlock_info(int index) const;
  ::PBUpgradeInfo* _internal_add_unlock_info();
  public:
  const ::PBUpgradeInfo& unlock_info(int index) const;
  ::PBUpgradeInfo* add_unlock_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgradeInfo >&
      unlock_info() const;

  // .PBLocationID next_loc = 1;
  void clear_next_loc();
  ::PBLocationID next_loc() const;
  void set_next_loc(::PBLocationID value);
  private:
  ::PBLocationID _internal_next_loc() const;
  void _internal_set_next_loc(::PBLocationID value);
  public:

  // bool needs_database = 2;
  void clear_needs_database();
  bool needs_database() const;
  void set_needs_database(bool value);
  private:
  bool _internal_needs_database() const;
  void _internal_set_needs_database(bool value);
  public:

  // int32 unlock_level = 4;
  void clear_unlock_level();
  ::PROTOBUF_NAMESPACE_ID::int32 unlock_level() const;
  void set_unlock_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unlock_level() const;
  void _internal_set_unlock_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:PBZoneAccessInteraction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgradeInfo > unlock_info_;
  int next_loc_;
  bool needs_database_;
  ::PROTOBUF_NAMESPACE_ID::int32 unlock_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interaction_2eproto;
};
// -------------------------------------------------------------------

class PBShopInteraction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBShopInteraction) */ {
 public:
  inline PBShopInteraction() : PBShopInteraction(nullptr) {};
  virtual ~PBShopInteraction();

  PBShopInteraction(const PBShopInteraction& from);
  PBShopInteraction(PBShopInteraction&& from) noexcept
    : PBShopInteraction() {
    *this = ::std::move(from);
  }

  inline PBShopInteraction& operator=(const PBShopInteraction& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBShopInteraction& operator=(PBShopInteraction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PBShopInteraction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBShopInteraction* internal_default_instance() {
    return reinterpret_cast<const PBShopInteraction*>(
               &_PBShopInteraction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PBShopInteraction& a, PBShopInteraction& b) {
    a.Swap(&b);
  }
  inline void Swap(PBShopInteraction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBShopInteraction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PBShopInteraction* New() const final {
    return CreateMaybeMessage<PBShopInteraction>(nullptr);
  }

  PBShopInteraction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PBShopInteraction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PBShopInteraction& from);
  void MergeFrom(const PBShopInteraction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBShopInteraction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBShopInteraction";
  }
  protected:
  explicit PBShopInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_interaction_2eproto);
    return ::descriptor_table_interaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PBShopInteraction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interaction_2eproto;
};
// -------------------------------------------------------------------

class PBDialogInteraction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBDialogInteraction) */ {
 public:
  inline PBDialogInteraction() : PBDialogInteraction(nullptr) {};
  virtual ~PBDialogInteraction();

  PBDialogInteraction(const PBDialogInteraction& from);
  PBDialogInteraction(PBDialogInteraction&& from) noexcept
    : PBDialogInteraction() {
    *this = ::std::move(from);
  }

  inline PBDialogInteraction& operator=(const PBDialogInteraction& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBDialogInteraction& operator=(PBDialogInteraction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PBDialogInteraction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBDialogInteraction* internal_default_instance() {
    return reinterpret_cast<const PBDialogInteraction*>(
               &_PBDialogInteraction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PBDialogInteraction& a, PBDialogInteraction& b) {
    a.Swap(&b);
  }
  inline void Swap(PBDialogInteraction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBDialogInteraction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PBDialogInteraction* New() const final {
    return CreateMaybeMessage<PBDialogInteraction>(nullptr);
  }

  PBDialogInteraction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PBDialogInteraction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PBDialogInteraction& from);
  void MergeFrom(const PBDialogInteraction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBDialogInteraction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBDialogInteraction";
  }
  protected:
  explicit PBDialogInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_interaction_2eproto);
    return ::descriptor_table_interaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 2,
    kNeedsDatabaseFieldNumber = 1,
    kCurrentDialogFieldNumber = 3,
  };
  // repeated .PBDialogInfo info = 2;
  int info_size() const;
  private:
  int _internal_info_size() const;
  public:
  void clear_info();
  ::PBDialogInfo* mutable_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBDialogInfo >*
      mutable_info();
  private:
  const ::PBDialogInfo& _internal_info(int index) const;
  ::PBDialogInfo* _internal_add_info();
  public:
  const ::PBDialogInfo& info(int index) const;
  ::PBDialogInfo* add_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBDialogInfo >&
      info() const;

  // bool needs_database = 1;
  void clear_needs_database();
  bool needs_database() const;
  void set_needs_database(bool value);
  private:
  bool _internal_needs_database() const;
  void _internal_set_needs_database(bool value);
  public:

  // int32 current_dialog = 3;
  void clear_current_dialog();
  ::PROTOBUF_NAMESPACE_ID::int32 current_dialog() const;
  void set_current_dialog(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_current_dialog() const;
  void _internal_set_current_dialog(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:PBDialogInteraction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBDialogInfo > info_;
  bool needs_database_;
  ::PROTOBUF_NAMESPACE_ID::int32 current_dialog_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interaction_2eproto;
};
// -------------------------------------------------------------------

class PBDialogInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBDialogInfo) */ {
 public:
  inline PBDialogInfo() : PBDialogInfo(nullptr) {};
  virtual ~PBDialogInfo();

  PBDialogInfo(const PBDialogInfo& from);
  PBDialogInfo(PBDialogInfo&& from) noexcept
    : PBDialogInfo() {
    *this = ::std::move(from);
  }

  inline PBDialogInfo& operator=(const PBDialogInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBDialogInfo& operator=(PBDialogInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PBDialogInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBDialogInfo* internal_default_instance() {
    return reinterpret_cast<const PBDialogInfo*>(
               &_PBDialogInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PBDialogInfo& a, PBDialogInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PBDialogInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBDialogInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PBDialogInfo* New() const final {
    return CreateMaybeMessage<PBDialogInfo>(nullptr);
  }

  PBDialogInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PBDialogInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PBDialogInfo& from);
  void MergeFrom(const PBDialogInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBDialogInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBDialogInfo";
  }
  protected:
  explicit PBDialogInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_interaction_2eproto);
    return ::descriptor_table_interaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseOptionsFieldNumber = 4,
    kTextFieldNumber = 1,
    kNpcImageFieldNumber = 2,
    kMoreTextFieldNumber = 3,
  };
  // repeated .PBResponseOption response_options = 4;
  int response_options_size() const;
  private:
  int _internal_response_options_size() const;
  public:
  void clear_response_options();
  ::PBResponseOption* mutable_response_options(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBResponseOption >*
      mutable_response_options();
  private:
  const ::PBResponseOption& _internal_response_options(int index) const;
  ::PBResponseOption* _internal_add_response_options();
  public:
  const ::PBResponseOption& response_options(int index) const;
  ::PBResponseOption* add_response_options();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBResponseOption >&
      response_options() const;

  // string text = 1;
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_text();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_text(
      std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // string npc_image = 2;
  void clear_npc_image();
  const std::string& npc_image() const;
  void set_npc_image(const std::string& value);
  void set_npc_image(std::string&& value);
  void set_npc_image(const char* value);
  void set_npc_image(const char* value, size_t size);
  std::string* mutable_npc_image();
  std::string* release_npc_image();
  void set_allocated_npc_image(std::string* npc_image);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_npc_image();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_npc_image(
      std::string* npc_image);
  private:
  const std::string& _internal_npc_image() const;
  void _internal_set_npc_image(const std::string& value);
  std::string* _internal_mutable_npc_image();
  public:

  // bool more_text = 3;
  void clear_more_text();
  bool more_text() const;
  void set_more_text(bool value);
  private:
  bool _internal_more_text() const;
  void _internal_set_more_text(bool value);
  public:

  // @@protoc_insertion_point(class_scope:PBDialogInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBResponseOption > response_options_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr npc_image_;
  bool more_text_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interaction_2eproto;
};
// -------------------------------------------------------------------

class PBResponseOption PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBResponseOption) */ {
 public:
  inline PBResponseOption() : PBResponseOption(nullptr) {};
  virtual ~PBResponseOption();

  PBResponseOption(const PBResponseOption& from);
  PBResponseOption(PBResponseOption&& from) noexcept
    : PBResponseOption() {
    *this = ::std::move(from);
  }

  inline PBResponseOption& operator=(const PBResponseOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBResponseOption& operator=(PBResponseOption&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PBResponseOption& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBResponseOption* internal_default_instance() {
    return reinterpret_cast<const PBResponseOption*>(
               &_PBResponseOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(PBResponseOption& a, PBResponseOption& b) {
    a.Swap(&b);
  }
  inline void Swap(PBResponseOption* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBResponseOption* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PBResponseOption* New() const final {
    return CreateMaybeMessage<PBResponseOption>(nullptr);
  }

  PBResponseOption* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PBResponseOption>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PBResponseOption& from);
  void MergeFrom(const PBResponseOption& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBResponseOption* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBResponseOption";
  }
  protected:
  explicit PBResponseOption(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_interaction_2eproto);
    return ::descriptor_table_interaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 1,
    kNextTextFieldNumber = 2,
  };
  // string text = 1;
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_text();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_text(
      std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // int32 next_text = 2;
  void clear_next_text();
  ::PROTOBUF_NAMESPACE_ID::int32 next_text() const;
  void set_next_text(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_next_text() const;
  void _internal_set_next_text(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:PBResponseOption)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::PROTOBUF_NAMESPACE_ID::int32 next_text_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interaction_2eproto;
};
// -------------------------------------------------------------------

class PBQuestInteraction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBQuestInteraction) */ {
 public:
  inline PBQuestInteraction() : PBQuestInteraction(nullptr) {};
  virtual ~PBQuestInteraction();

  PBQuestInteraction(const PBQuestInteraction& from);
  PBQuestInteraction(PBQuestInteraction&& from) noexcept
    : PBQuestInteraction() {
    *this = ::std::move(from);
  }

  inline PBQuestInteraction& operator=(const PBQuestInteraction& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBQuestInteraction& operator=(PBQuestInteraction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PBQuestInteraction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBQuestInteraction* internal_default_instance() {
    return reinterpret_cast<const PBQuestInteraction*>(
               &_PBQuestInteraction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(PBQuestInteraction& a, PBQuestInteraction& b) {
    a.Swap(&b);
  }
  inline void Swap(PBQuestInteraction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBQuestInteraction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PBQuestInteraction* New() const final {
    return CreateMaybeMessage<PBQuestInteraction>(nullptr);
  }

  PBQuestInteraction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PBQuestInteraction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PBQuestInteraction& from);
  void MergeFrom(const PBQuestInteraction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBQuestInteraction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBQuestInteraction";
  }
  protected:
  explicit PBQuestInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_interaction_2eproto);
    return ::descriptor_table_interaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PBQuestInteraction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interaction_2eproto;
};
// -------------------------------------------------------------------

class PBCustomInteraction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBCustomInteraction) */ {
 public:
  inline PBCustomInteraction() : PBCustomInteraction(nullptr) {};
  virtual ~PBCustomInteraction();

  PBCustomInteraction(const PBCustomInteraction& from);
  PBCustomInteraction(PBCustomInteraction&& from) noexcept
    : PBCustomInteraction() {
    *this = ::std::move(from);
  }

  inline PBCustomInteraction& operator=(const PBCustomInteraction& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBCustomInteraction& operator=(PBCustomInteraction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PBCustomInteraction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBCustomInteraction* internal_default_instance() {
    return reinterpret_cast<const PBCustomInteraction*>(
               &_PBCustomInteraction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(PBCustomInteraction& a, PBCustomInteraction& b) {
    a.Swap(&b);
  }
  inline void Swap(PBCustomInteraction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBCustomInteraction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PBCustomInteraction* New() const final {
    return CreateMaybeMessage<PBCustomInteraction>(nullptr);
  }

  PBCustomInteraction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PBCustomInteraction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PBCustomInteraction& from);
  void MergeFrom(const PBCustomInteraction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBCustomInteraction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBCustomInteraction";
  }
  protected:
  explicit PBCustomInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_interaction_2eproto);
    return ::descriptor_table_interaction_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PBCustomInteraction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_interaction_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PBInteraction

// repeated .PBInteractionType types = 1;
inline int PBInteraction::_internal_types_size() const {
  return types_.size();
}
inline int PBInteraction::types_size() const {
  return _internal_types_size();
}
inline void PBInteraction::clear_types() {
  types_.Clear();
}
inline ::PBInteractionType PBInteraction::_internal_types(int index) const {
  return static_cast< ::PBInteractionType >(types_.Get(index));
}
inline ::PBInteractionType PBInteraction::types(int index) const {
  // @@protoc_insertion_point(field_get:PBInteraction.types)
  return _internal_types(index);
}
inline void PBInteraction::set_types(int index, ::PBInteractionType value) {
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBInteraction.types)
}
inline void PBInteraction::_internal_add_types(::PBInteractionType value) {
  types_.Add(value);
}
inline void PBInteraction::add_types(::PBInteractionType value) {
  // @@protoc_insertion_point(field_add:PBInteraction.types)
  _internal_add_types(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
PBInteraction::types() const {
  // @@protoc_insertion_point(field_list:PBInteraction.types)
  return types_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
PBInteraction::_internal_mutable_types() {
  return &types_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
PBInteraction::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:PBInteraction.types)
  return _internal_mutable_types();
}

// int32 database_id = 2;
inline void PBInteraction::clear_database_id() {
  database_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBInteraction::_internal_database_id() const {
  return database_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBInteraction::database_id() const {
  // @@protoc_insertion_point(field_get:PBInteraction.database_id)
  return _internal_database_id();
}
inline void PBInteraction::_internal_set_database_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  database_id_ = value;
}
inline void PBInteraction::set_database_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_database_id(value);
  // @@protoc_insertion_point(field_set:PBInteraction.database_id)
}

// string interaction_name = 3;
inline void PBInteraction::clear_interaction_name() {
  interaction_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& PBInteraction::interaction_name() const {
  // @@protoc_insertion_point(field_get:PBInteraction.interaction_name)
  return _internal_interaction_name();
}
inline void PBInteraction::set_interaction_name(const std::string& value) {
  _internal_set_interaction_name(value);
  // @@protoc_insertion_point(field_set:PBInteraction.interaction_name)
}
inline std::string* PBInteraction::mutable_interaction_name() {
  // @@protoc_insertion_point(field_mutable:PBInteraction.interaction_name)
  return _internal_mutable_interaction_name();
}
inline const std::string& PBInteraction::_internal_interaction_name() const {
  return interaction_name_.Get();
}
inline void PBInteraction::_internal_set_interaction_name(const std::string& value) {
  
  interaction_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PBInteraction::set_interaction_name(std::string&& value) {
  
  interaction_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:PBInteraction.interaction_name)
}
inline void PBInteraction::set_interaction_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  interaction_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:PBInteraction.interaction_name)
}
inline void PBInteraction::set_interaction_name(const char* value,
    size_t size) {
  
  interaction_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:PBInteraction.interaction_name)
}
inline std::string* PBInteraction::_internal_mutable_interaction_name() {
  
  return interaction_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PBInteraction::release_interaction_name() {
  // @@protoc_insertion_point(field_release:PBInteraction.interaction_name)
  return interaction_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PBInteraction::set_allocated_interaction_name(std::string* interaction_name) {
  if (interaction_name != nullptr) {
    
  } else {
    
  }
  interaction_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), interaction_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:PBInteraction.interaction_name)
}
inline std::string* PBInteraction::unsafe_arena_release_interaction_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PBInteraction.interaction_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return interaction_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PBInteraction::unsafe_arena_set_allocated_interaction_name(
    std::string* interaction_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (interaction_name != nullptr) {
    
  } else {
    
  }
  interaction_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      interaction_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBInteraction.interaction_name)
}

// int32 pos_x = 4;
inline void PBInteraction::clear_pos_x() {
  pos_x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBInteraction::_internal_pos_x() const {
  return pos_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBInteraction::pos_x() const {
  // @@protoc_insertion_point(field_get:PBInteraction.pos_x)
  return _internal_pos_x();
}
inline void PBInteraction::_internal_set_pos_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pos_x_ = value;
}
inline void PBInteraction::set_pos_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pos_x(value);
  // @@protoc_insertion_point(field_set:PBInteraction.pos_x)
}

// int32 pos_y = 5;
inline void PBInteraction::clear_pos_y() {
  pos_y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBInteraction::_internal_pos_y() const {
  return pos_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBInteraction::pos_y() const {
  // @@protoc_insertion_point(field_get:PBInteraction.pos_y)
  return _internal_pos_y();
}
inline void PBInteraction::_internal_set_pos_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pos_y_ = value;
}
inline void PBInteraction::set_pos_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pos_y(value);
  // @@protoc_insertion_point(field_set:PBInteraction.pos_y)
}

// repeated string map_icon_paths = 6;
inline int PBInteraction::_internal_map_icon_paths_size() const {
  return map_icon_paths_.size();
}
inline int PBInteraction::map_icon_paths_size() const {
  return _internal_map_icon_paths_size();
}
inline void PBInteraction::clear_map_icon_paths() {
  map_icon_paths_.Clear();
}
inline std::string* PBInteraction::add_map_icon_paths() {
  // @@protoc_insertion_point(field_add_mutable:PBInteraction.map_icon_paths)
  return _internal_add_map_icon_paths();
}
inline const std::string& PBInteraction::_internal_map_icon_paths(int index) const {
  return map_icon_paths_.Get(index);
}
inline const std::string& PBInteraction::map_icon_paths(int index) const {
  // @@protoc_insertion_point(field_get:PBInteraction.map_icon_paths)
  return _internal_map_icon_paths(index);
}
inline std::string* PBInteraction::mutable_map_icon_paths(int index) {
  // @@protoc_insertion_point(field_mutable:PBInteraction.map_icon_paths)
  return map_icon_paths_.Mutable(index);
}
inline void PBInteraction::set_map_icon_paths(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:PBInteraction.map_icon_paths)
  map_icon_paths_.Mutable(index)->assign(value);
}
inline void PBInteraction::set_map_icon_paths(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:PBInteraction.map_icon_paths)
  map_icon_paths_.Mutable(index)->assign(std::move(value));
}
inline void PBInteraction::set_map_icon_paths(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  map_icon_paths_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PBInteraction.map_icon_paths)
}
inline void PBInteraction::set_map_icon_paths(int index, const char* value, size_t size) {
  map_icon_paths_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PBInteraction.map_icon_paths)
}
inline std::string* PBInteraction::_internal_add_map_icon_paths() {
  return map_icon_paths_.Add();
}
inline void PBInteraction::add_map_icon_paths(const std::string& value) {
  map_icon_paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PBInteraction.map_icon_paths)
}
inline void PBInteraction::add_map_icon_paths(std::string&& value) {
  map_icon_paths_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:PBInteraction.map_icon_paths)
}
inline void PBInteraction::add_map_icon_paths(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  map_icon_paths_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PBInteraction.map_icon_paths)
}
inline void PBInteraction::add_map_icon_paths(const char* value, size_t size) {
  map_icon_paths_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PBInteraction.map_icon_paths)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
PBInteraction::map_icon_paths() const {
  // @@protoc_insertion_point(field_list:PBInteraction.map_icon_paths)
  return map_icon_paths_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
PBInteraction::mutable_map_icon_paths() {
  // @@protoc_insertion_point(field_mutable_list:PBInteraction.map_icon_paths)
  return &map_icon_paths_;
}

// .PBPostInteraction post_info = 7;
inline bool PBInteraction::_internal_has_post_info() const {
  return this != internal_default_instance() && post_info_ != nullptr;
}
inline bool PBInteraction::has_post_info() const {
  return _internal_has_post_info();
}
inline void PBInteraction::clear_post_info() {
  if (GetArena() == nullptr && post_info_ != nullptr) {
    delete post_info_;
  }
  post_info_ = nullptr;
}
inline const ::PBPostInteraction& PBInteraction::_internal_post_info() const {
  const ::PBPostInteraction* p = post_info_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PBPostInteraction*>(
      &::_PBPostInteraction_default_instance_);
}
inline const ::PBPostInteraction& PBInteraction::post_info() const {
  // @@protoc_insertion_point(field_get:PBInteraction.post_info)
  return _internal_post_info();
}
inline void PBInteraction::unsafe_arena_set_allocated_post_info(
    ::PBPostInteraction* post_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(post_info_);
  }
  post_info_ = post_info;
  if (post_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBInteraction.post_info)
}
inline ::PBPostInteraction* PBInteraction::release_post_info() {
  auto temp = unsafe_arena_release_post_info();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::PBPostInteraction* PBInteraction::unsafe_arena_release_post_info() {
  // @@protoc_insertion_point(field_release:PBInteraction.post_info)
  
  ::PBPostInteraction* temp = post_info_;
  post_info_ = nullptr;
  return temp;
}
inline ::PBPostInteraction* PBInteraction::_internal_mutable_post_info() {
  
  if (post_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBPostInteraction>(GetArena());
    post_info_ = p;
  }
  return post_info_;
}
inline ::PBPostInteraction* PBInteraction::mutable_post_info() {
  // @@protoc_insertion_point(field_mutable:PBInteraction.post_info)
  return _internal_mutable_post_info();
}
inline void PBInteraction::set_allocated_post_info(::PBPostInteraction* post_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete post_info_;
  }
  if (post_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(post_info);
    if (message_arena != submessage_arena) {
      post_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, post_info, submessage_arena);
    }
    
  } else {
    
  }
  post_info_ = post_info;
  // @@protoc_insertion_point(field_set_allocated:PBInteraction.post_info)
}

// .PBZoneAccessInteraction zone_access_info = 8;
inline bool PBInteraction::_internal_has_zone_access_info() const {
  return this != internal_default_instance() && zone_access_info_ != nullptr;
}
inline bool PBInteraction::has_zone_access_info() const {
  return _internal_has_zone_access_info();
}
inline void PBInteraction::clear_zone_access_info() {
  if (GetArena() == nullptr && zone_access_info_ != nullptr) {
    delete zone_access_info_;
  }
  zone_access_info_ = nullptr;
}
inline const ::PBZoneAccessInteraction& PBInteraction::_internal_zone_access_info() const {
  const ::PBZoneAccessInteraction* p = zone_access_info_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PBZoneAccessInteraction*>(
      &::_PBZoneAccessInteraction_default_instance_);
}
inline const ::PBZoneAccessInteraction& PBInteraction::zone_access_info() const {
  // @@protoc_insertion_point(field_get:PBInteraction.zone_access_info)
  return _internal_zone_access_info();
}
inline void PBInteraction::unsafe_arena_set_allocated_zone_access_info(
    ::PBZoneAccessInteraction* zone_access_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(zone_access_info_);
  }
  zone_access_info_ = zone_access_info;
  if (zone_access_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBInteraction.zone_access_info)
}
inline ::PBZoneAccessInteraction* PBInteraction::release_zone_access_info() {
  auto temp = unsafe_arena_release_zone_access_info();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::PBZoneAccessInteraction* PBInteraction::unsafe_arena_release_zone_access_info() {
  // @@protoc_insertion_point(field_release:PBInteraction.zone_access_info)
  
  ::PBZoneAccessInteraction* temp = zone_access_info_;
  zone_access_info_ = nullptr;
  return temp;
}
inline ::PBZoneAccessInteraction* PBInteraction::_internal_mutable_zone_access_info() {
  
  if (zone_access_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBZoneAccessInteraction>(GetArena());
    zone_access_info_ = p;
  }
  return zone_access_info_;
}
inline ::PBZoneAccessInteraction* PBInteraction::mutable_zone_access_info() {
  // @@protoc_insertion_point(field_mutable:PBInteraction.zone_access_info)
  return _internal_mutable_zone_access_info();
}
inline void PBInteraction::set_allocated_zone_access_info(::PBZoneAccessInteraction* zone_access_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete zone_access_info_;
  }
  if (zone_access_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(zone_access_info);
    if (message_arena != submessage_arena) {
      zone_access_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, zone_access_info, submessage_arena);
    }
    
  } else {
    
  }
  zone_access_info_ = zone_access_info;
  // @@protoc_insertion_point(field_set_allocated:PBInteraction.zone_access_info)
}

// .PBShopInteraction shop_info = 9;
inline bool PBInteraction::_internal_has_shop_info() const {
  return this != internal_default_instance() && shop_info_ != nullptr;
}
inline bool PBInteraction::has_shop_info() const {
  return _internal_has_shop_info();
}
inline void PBInteraction::clear_shop_info() {
  if (GetArena() == nullptr && shop_info_ != nullptr) {
    delete shop_info_;
  }
  shop_info_ = nullptr;
}
inline const ::PBShopInteraction& PBInteraction::_internal_shop_info() const {
  const ::PBShopInteraction* p = shop_info_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PBShopInteraction*>(
      &::_PBShopInteraction_default_instance_);
}
inline const ::PBShopInteraction& PBInteraction::shop_info() const {
  // @@protoc_insertion_point(field_get:PBInteraction.shop_info)
  return _internal_shop_info();
}
inline void PBInteraction::unsafe_arena_set_allocated_shop_info(
    ::PBShopInteraction* shop_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(shop_info_);
  }
  shop_info_ = shop_info;
  if (shop_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBInteraction.shop_info)
}
inline ::PBShopInteraction* PBInteraction::release_shop_info() {
  auto temp = unsafe_arena_release_shop_info();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::PBShopInteraction* PBInteraction::unsafe_arena_release_shop_info() {
  // @@protoc_insertion_point(field_release:PBInteraction.shop_info)
  
  ::PBShopInteraction* temp = shop_info_;
  shop_info_ = nullptr;
  return temp;
}
inline ::PBShopInteraction* PBInteraction::_internal_mutable_shop_info() {
  
  if (shop_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBShopInteraction>(GetArena());
    shop_info_ = p;
  }
  return shop_info_;
}
inline ::PBShopInteraction* PBInteraction::mutable_shop_info() {
  // @@protoc_insertion_point(field_mutable:PBInteraction.shop_info)
  return _internal_mutable_shop_info();
}
inline void PBInteraction::set_allocated_shop_info(::PBShopInteraction* shop_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete shop_info_;
  }
  if (shop_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(shop_info);
    if (message_arena != submessage_arena) {
      shop_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, shop_info, submessage_arena);
    }
    
  } else {
    
  }
  shop_info_ = shop_info;
  // @@protoc_insertion_point(field_set_allocated:PBInteraction.shop_info)
}

// .PBQuestInteraction quest_info = 10;
inline bool PBInteraction::_internal_has_quest_info() const {
  return this != internal_default_instance() && quest_info_ != nullptr;
}
inline bool PBInteraction::has_quest_info() const {
  return _internal_has_quest_info();
}
inline void PBInteraction::clear_quest_info() {
  if (GetArena() == nullptr && quest_info_ != nullptr) {
    delete quest_info_;
  }
  quest_info_ = nullptr;
}
inline const ::PBQuestInteraction& PBInteraction::_internal_quest_info() const {
  const ::PBQuestInteraction* p = quest_info_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PBQuestInteraction*>(
      &::_PBQuestInteraction_default_instance_);
}
inline const ::PBQuestInteraction& PBInteraction::quest_info() const {
  // @@protoc_insertion_point(field_get:PBInteraction.quest_info)
  return _internal_quest_info();
}
inline void PBInteraction::unsafe_arena_set_allocated_quest_info(
    ::PBQuestInteraction* quest_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(quest_info_);
  }
  quest_info_ = quest_info;
  if (quest_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBInteraction.quest_info)
}
inline ::PBQuestInteraction* PBInteraction::release_quest_info() {
  auto temp = unsafe_arena_release_quest_info();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::PBQuestInteraction* PBInteraction::unsafe_arena_release_quest_info() {
  // @@protoc_insertion_point(field_release:PBInteraction.quest_info)
  
  ::PBQuestInteraction* temp = quest_info_;
  quest_info_ = nullptr;
  return temp;
}
inline ::PBQuestInteraction* PBInteraction::_internal_mutable_quest_info() {
  
  if (quest_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBQuestInteraction>(GetArena());
    quest_info_ = p;
  }
  return quest_info_;
}
inline ::PBQuestInteraction* PBInteraction::mutable_quest_info() {
  // @@protoc_insertion_point(field_mutable:PBInteraction.quest_info)
  return _internal_mutable_quest_info();
}
inline void PBInteraction::set_allocated_quest_info(::PBQuestInteraction* quest_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete quest_info_;
  }
  if (quest_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(quest_info);
    if (message_arena != submessage_arena) {
      quest_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, quest_info, submessage_arena);
    }
    
  } else {
    
  }
  quest_info_ = quest_info;
  // @@protoc_insertion_point(field_set_allocated:PBInteraction.quest_info)
}

// .PBDialogInteraction dialog_info = 11;
inline bool PBInteraction::_internal_has_dialog_info() const {
  return this != internal_default_instance() && dialog_info_ != nullptr;
}
inline bool PBInteraction::has_dialog_info() const {
  return _internal_has_dialog_info();
}
inline void PBInteraction::clear_dialog_info() {
  if (GetArena() == nullptr && dialog_info_ != nullptr) {
    delete dialog_info_;
  }
  dialog_info_ = nullptr;
}
inline const ::PBDialogInteraction& PBInteraction::_internal_dialog_info() const {
  const ::PBDialogInteraction* p = dialog_info_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PBDialogInteraction*>(
      &::_PBDialogInteraction_default_instance_);
}
inline const ::PBDialogInteraction& PBInteraction::dialog_info() const {
  // @@protoc_insertion_point(field_get:PBInteraction.dialog_info)
  return _internal_dialog_info();
}
inline void PBInteraction::unsafe_arena_set_allocated_dialog_info(
    ::PBDialogInteraction* dialog_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dialog_info_);
  }
  dialog_info_ = dialog_info;
  if (dialog_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBInteraction.dialog_info)
}
inline ::PBDialogInteraction* PBInteraction::release_dialog_info() {
  auto temp = unsafe_arena_release_dialog_info();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::PBDialogInteraction* PBInteraction::unsafe_arena_release_dialog_info() {
  // @@protoc_insertion_point(field_release:PBInteraction.dialog_info)
  
  ::PBDialogInteraction* temp = dialog_info_;
  dialog_info_ = nullptr;
  return temp;
}
inline ::PBDialogInteraction* PBInteraction::_internal_mutable_dialog_info() {
  
  if (dialog_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBDialogInteraction>(GetArena());
    dialog_info_ = p;
  }
  return dialog_info_;
}
inline ::PBDialogInteraction* PBInteraction::mutable_dialog_info() {
  // @@protoc_insertion_point(field_mutable:PBInteraction.dialog_info)
  return _internal_mutable_dialog_info();
}
inline void PBInteraction::set_allocated_dialog_info(::PBDialogInteraction* dialog_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dialog_info_;
  }
  if (dialog_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dialog_info);
    if (message_arena != submessage_arena) {
      dialog_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dialog_info, submessage_arena);
    }
    
  } else {
    
  }
  dialog_info_ = dialog_info;
  // @@protoc_insertion_point(field_set_allocated:PBInteraction.dialog_info)
}

// .PBCustomInteraction custom_info = 12;
inline bool PBInteraction::_internal_has_custom_info() const {
  return this != internal_default_instance() && custom_info_ != nullptr;
}
inline bool PBInteraction::has_custom_info() const {
  return _internal_has_custom_info();
}
inline void PBInteraction::clear_custom_info() {
  if (GetArena() == nullptr && custom_info_ != nullptr) {
    delete custom_info_;
  }
  custom_info_ = nullptr;
}
inline const ::PBCustomInteraction& PBInteraction::_internal_custom_info() const {
  const ::PBCustomInteraction* p = custom_info_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PBCustomInteraction*>(
      &::_PBCustomInteraction_default_instance_);
}
inline const ::PBCustomInteraction& PBInteraction::custom_info() const {
  // @@protoc_insertion_point(field_get:PBInteraction.custom_info)
  return _internal_custom_info();
}
inline void PBInteraction::unsafe_arena_set_allocated_custom_info(
    ::PBCustomInteraction* custom_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(custom_info_);
  }
  custom_info_ = custom_info;
  if (custom_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBInteraction.custom_info)
}
inline ::PBCustomInteraction* PBInteraction::release_custom_info() {
  auto temp = unsafe_arena_release_custom_info();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::PBCustomInteraction* PBInteraction::unsafe_arena_release_custom_info() {
  // @@protoc_insertion_point(field_release:PBInteraction.custom_info)
  
  ::PBCustomInteraction* temp = custom_info_;
  custom_info_ = nullptr;
  return temp;
}
inline ::PBCustomInteraction* PBInteraction::_internal_mutable_custom_info() {
  
  if (custom_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::PBCustomInteraction>(GetArena());
    custom_info_ = p;
  }
  return custom_info_;
}
inline ::PBCustomInteraction* PBInteraction::mutable_custom_info() {
  // @@protoc_insertion_point(field_mutable:PBInteraction.custom_info)
  return _internal_mutable_custom_info();
}
inline void PBInteraction::set_allocated_custom_info(::PBCustomInteraction* custom_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete custom_info_;
  }
  if (custom_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(custom_info);
    if (message_arena != submessage_arena) {
      custom_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom_info, submessage_arena);
    }
    
  } else {
    
  }
  custom_info_ = custom_info;
  // @@protoc_insertion_point(field_set_allocated:PBInteraction.custom_info)
}

// -------------------------------------------------------------------

// PBPostInteraction

// repeated .PBItemData resources = 1;
inline int PBPostInteraction::_internal_resources_size() const {
  return resources_.size();
}
inline int PBPostInteraction::resources_size() const {
  return _internal_resources_size();
}
inline ::PBItemData* PBPostInteraction::mutable_resources(int index) {
  // @@protoc_insertion_point(field_mutable:PBPostInteraction.resources)
  return resources_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBItemData >*
PBPostInteraction::mutable_resources() {
  // @@protoc_insertion_point(field_mutable_list:PBPostInteraction.resources)
  return &resources_;
}
inline const ::PBItemData& PBPostInteraction::_internal_resources(int index) const {
  return resources_.Get(index);
}
inline const ::PBItemData& PBPostInteraction::resources(int index) const {
  // @@protoc_insertion_point(field_get:PBPostInteraction.resources)
  return _internal_resources(index);
}
inline ::PBItemData* PBPostInteraction::_internal_add_resources() {
  return resources_.Add();
}
inline ::PBItemData* PBPostInteraction::add_resources() {
  // @@protoc_insertion_point(field_add:PBPostInteraction.resources)
  return _internal_add_resources();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBItemData >&
PBPostInteraction::resources() const {
  // @@protoc_insertion_point(field_list:PBPostInteraction.resources)
  return resources_;
}

// .PBPlayerSkills post_skill = 2;
inline void PBPostInteraction::clear_post_skill() {
  post_skill_ = 0;
}
inline ::PBPlayerSkills PBPostInteraction::_internal_post_skill() const {
  return static_cast< ::PBPlayerSkills >(post_skill_);
}
inline ::PBPlayerSkills PBPostInteraction::post_skill() const {
  // @@protoc_insertion_point(field_get:PBPostInteraction.post_skill)
  return _internal_post_skill();
}
inline void PBPostInteraction::_internal_set_post_skill(::PBPlayerSkills value) {
  
  post_skill_ = value;
}
inline void PBPostInteraction::set_post_skill(::PBPlayerSkills value) {
  _internal_set_post_skill(value);
  // @@protoc_insertion_point(field_set:PBPostInteraction.post_skill)
}

// int32 interact_xp = 3;
inline void PBPostInteraction::clear_interact_xp() {
  interact_xp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBPostInteraction::_internal_interact_xp() const {
  return interact_xp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBPostInteraction::interact_xp() const {
  // @@protoc_insertion_point(field_get:PBPostInteraction.interact_xp)
  return _internal_interact_xp();
}
inline void PBPostInteraction::_internal_set_interact_xp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  interact_xp_ = value;
}
inline void PBPostInteraction::set_interact_xp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_interact_xp(value);
  // @@protoc_insertion_point(field_set:PBPostInteraction.interact_xp)
}

// bool needs_database = 4;
inline void PBPostInteraction::clear_needs_database() {
  needs_database_ = false;
}
inline bool PBPostInteraction::_internal_needs_database() const {
  return needs_database_;
}
inline bool PBPostInteraction::needs_database() const {
  // @@protoc_insertion_point(field_get:PBPostInteraction.needs_database)
  return _internal_needs_database();
}
inline void PBPostInteraction::_internal_set_needs_database(bool value) {
  
  needs_database_ = value;
}
inline void PBPostInteraction::set_needs_database(bool value) {
  _internal_set_needs_database(value);
  // @@protoc_insertion_point(field_set:PBPostInteraction.needs_database)
}

// repeated .PBUpgrades upgrades = 5;
inline int PBPostInteraction::_internal_upgrades_size() const {
  return upgrades_.size();
}
inline int PBPostInteraction::upgrades_size() const {
  return _internal_upgrades_size();
}
inline void PBPostInteraction::clear_upgrades() {
  upgrades_.Clear();
}
inline ::PBUpgrades* PBPostInteraction::mutable_upgrades(int index) {
  // @@protoc_insertion_point(field_mutable:PBPostInteraction.upgrades)
  return upgrades_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgrades >*
PBPostInteraction::mutable_upgrades() {
  // @@protoc_insertion_point(field_mutable_list:PBPostInteraction.upgrades)
  return &upgrades_;
}
inline const ::PBUpgrades& PBPostInteraction::_internal_upgrades(int index) const {
  return upgrades_.Get(index);
}
inline const ::PBUpgrades& PBPostInteraction::upgrades(int index) const {
  // @@protoc_insertion_point(field_get:PBPostInteraction.upgrades)
  return _internal_upgrades(index);
}
inline ::PBUpgrades* PBPostInteraction::_internal_add_upgrades() {
  return upgrades_.Add();
}
inline ::PBUpgrades* PBPostInteraction::add_upgrades() {
  // @@protoc_insertion_point(field_add:PBPostInteraction.upgrades)
  return _internal_add_upgrades();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgrades >&
PBPostInteraction::upgrades() const {
  // @@protoc_insertion_point(field_list:PBPostInteraction.upgrades)
  return upgrades_;
}

// int32 capacity_upgrade = 6;
inline void PBPostInteraction::clear_capacity_upgrade() {
  capacity_upgrade_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBPostInteraction::_internal_capacity_upgrade() const {
  return capacity_upgrade_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBPostInteraction::capacity_upgrade() const {
  // @@protoc_insertion_point(field_get:PBPostInteraction.capacity_upgrade)
  return _internal_capacity_upgrade();
}
inline void PBPostInteraction::_internal_set_capacity_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  capacity_upgrade_ = value;
}
inline void PBPostInteraction::set_capacity_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_capacity_upgrade(value);
  // @@protoc_insertion_point(field_set:PBPostInteraction.capacity_upgrade)
}

// int32 gen_second_upgrade = 7;
inline void PBPostInteraction::clear_gen_second_upgrade() {
  gen_second_upgrade_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBPostInteraction::_internal_gen_second_upgrade() const {
  return gen_second_upgrade_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBPostInteraction::gen_second_upgrade() const {
  // @@protoc_insertion_point(field_get:PBPostInteraction.gen_second_upgrade)
  return _internal_gen_second_upgrade();
}
inline void PBPostInteraction::_internal_set_gen_second_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gen_second_upgrade_ = value;
}
inline void PBPostInteraction::set_gen_second_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gen_second_upgrade(value);
  // @@protoc_insertion_point(field_set:PBPostInteraction.gen_second_upgrade)
}

// int32 fortune_upgrade = 8;
inline void PBPostInteraction::clear_fortune_upgrade() {
  fortune_upgrade_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBPostInteraction::_internal_fortune_upgrade() const {
  return fortune_upgrade_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBPostInteraction::fortune_upgrade() const {
  // @@protoc_insertion_point(field_get:PBPostInteraction.fortune_upgrade)
  return _internal_fortune_upgrade();
}
inline void PBPostInteraction::_internal_set_fortune_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  fortune_upgrade_ = value;
}
inline void PBPostInteraction::set_fortune_upgrade(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_fortune_upgrade(value);
  // @@protoc_insertion_point(field_set:PBPostInteraction.fortune_upgrade)
}

// int64 resource_stored = 9;
inline void PBPostInteraction::clear_resource_stored() {
  resource_stored_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PBPostInteraction::_internal_resource_stored() const {
  return resource_stored_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 PBPostInteraction::resource_stored() const {
  // @@protoc_insertion_point(field_get:PBPostInteraction.resource_stored)
  return _internal_resource_stored();
}
inline void PBPostInteraction::_internal_set_resource_stored(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  resource_stored_ = value;
}
inline void PBPostInteraction::set_resource_stored(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_resource_stored(value);
  // @@protoc_insertion_point(field_set:PBPostInteraction.resource_stored)
}

// -------------------------------------------------------------------

// PBUpgrades

// .PBUpgradeType upgrade_type = 1;
inline void PBUpgrades::clear_upgrade_type() {
  upgrade_type_ = 0;
}
inline ::PBUpgradeType PBUpgrades::_internal_upgrade_type() const {
  return static_cast< ::PBUpgradeType >(upgrade_type_);
}
inline ::PBUpgradeType PBUpgrades::upgrade_type() const {
  // @@protoc_insertion_point(field_get:PBUpgrades.upgrade_type)
  return _internal_upgrade_type();
}
inline void PBUpgrades::_internal_set_upgrade_type(::PBUpgradeType value) {
  
  upgrade_type_ = value;
}
inline void PBUpgrades::set_upgrade_type(::PBUpgradeType value) {
  _internal_set_upgrade_type(value);
  // @@protoc_insertion_point(field_set:PBUpgrades.upgrade_type)
}

// repeated .PBUpgradeInfo info = 2;
inline int PBUpgrades::_internal_info_size() const {
  return info_.size();
}
inline int PBUpgrades::info_size() const {
  return _internal_info_size();
}
inline void PBUpgrades::clear_info() {
  info_.Clear();
}
inline ::PBUpgradeInfo* PBUpgrades::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:PBUpgrades.info)
  return info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgradeInfo >*
PBUpgrades::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:PBUpgrades.info)
  return &info_;
}
inline const ::PBUpgradeInfo& PBUpgrades::_internal_info(int index) const {
  return info_.Get(index);
}
inline const ::PBUpgradeInfo& PBUpgrades::info(int index) const {
  // @@protoc_insertion_point(field_get:PBUpgrades.info)
  return _internal_info(index);
}
inline ::PBUpgradeInfo* PBUpgrades::_internal_add_info() {
  return info_.Add();
}
inline ::PBUpgradeInfo* PBUpgrades::add_info() {
  // @@protoc_insertion_point(field_add:PBUpgrades.info)
  return _internal_add_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgradeInfo >&
PBUpgrades::info() const {
  // @@protoc_insertion_point(field_list:PBUpgrades.info)
  return info_;
}

// -------------------------------------------------------------------

// PBUpgradeInfo

// float current_stat = 3;
inline void PBUpgradeInfo::clear_current_stat() {
  current_stat_ = 0;
}
inline float PBUpgradeInfo::_internal_current_stat() const {
  return current_stat_;
}
inline float PBUpgradeInfo::current_stat() const {
  // @@protoc_insertion_point(field_get:PBUpgradeInfo.current_stat)
  return _internal_current_stat();
}
inline void PBUpgradeInfo::_internal_set_current_stat(float value) {
  
  current_stat_ = value;
}
inline void PBUpgradeInfo::set_current_stat(float value) {
  _internal_set_current_stat(value);
  // @@protoc_insertion_point(field_set:PBUpgradeInfo.current_stat)
}

// repeated .PBItemData upgrade_req = 4;
inline int PBUpgradeInfo::_internal_upgrade_req_size() const {
  return upgrade_req_.size();
}
inline int PBUpgradeInfo::upgrade_req_size() const {
  return _internal_upgrade_req_size();
}
inline ::PBItemData* PBUpgradeInfo::mutable_upgrade_req(int index) {
  // @@protoc_insertion_point(field_mutable:PBUpgradeInfo.upgrade_req)
  return upgrade_req_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBItemData >*
PBUpgradeInfo::mutable_upgrade_req() {
  // @@protoc_insertion_point(field_mutable_list:PBUpgradeInfo.upgrade_req)
  return &upgrade_req_;
}
inline const ::PBItemData& PBUpgradeInfo::_internal_upgrade_req(int index) const {
  return upgrade_req_.Get(index);
}
inline const ::PBItemData& PBUpgradeInfo::upgrade_req(int index) const {
  // @@protoc_insertion_point(field_get:PBUpgradeInfo.upgrade_req)
  return _internal_upgrade_req(index);
}
inline ::PBItemData* PBUpgradeInfo::_internal_add_upgrade_req() {
  return upgrade_req_.Add();
}
inline ::PBItemData* PBUpgradeInfo::add_upgrade_req() {
  // @@protoc_insertion_point(field_add:PBUpgradeInfo.upgrade_req)
  return _internal_add_upgrade_req();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBItemData >&
PBUpgradeInfo::upgrade_req() const {
  // @@protoc_insertion_point(field_list:PBUpgradeInfo.upgrade_req)
  return upgrade_req_;
}

// -------------------------------------------------------------------

// PBZoneAccessInteraction

// .PBLocationID next_loc = 1;
inline void PBZoneAccessInteraction::clear_next_loc() {
  next_loc_ = 0;
}
inline ::PBLocationID PBZoneAccessInteraction::_internal_next_loc() const {
  return static_cast< ::PBLocationID >(next_loc_);
}
inline ::PBLocationID PBZoneAccessInteraction::next_loc() const {
  // @@protoc_insertion_point(field_get:PBZoneAccessInteraction.next_loc)
  return _internal_next_loc();
}
inline void PBZoneAccessInteraction::_internal_set_next_loc(::PBLocationID value) {
  
  next_loc_ = value;
}
inline void PBZoneAccessInteraction::set_next_loc(::PBLocationID value) {
  _internal_set_next_loc(value);
  // @@protoc_insertion_point(field_set:PBZoneAccessInteraction.next_loc)
}

// bool needs_database = 2;
inline void PBZoneAccessInteraction::clear_needs_database() {
  needs_database_ = false;
}
inline bool PBZoneAccessInteraction::_internal_needs_database() const {
  return needs_database_;
}
inline bool PBZoneAccessInteraction::needs_database() const {
  // @@protoc_insertion_point(field_get:PBZoneAccessInteraction.needs_database)
  return _internal_needs_database();
}
inline void PBZoneAccessInteraction::_internal_set_needs_database(bool value) {
  
  needs_database_ = value;
}
inline void PBZoneAccessInteraction::set_needs_database(bool value) {
  _internal_set_needs_database(value);
  // @@protoc_insertion_point(field_set:PBZoneAccessInteraction.needs_database)
}

// repeated .PBUpgradeInfo unlock_info = 3;
inline int PBZoneAccessInteraction::_internal_unlock_info_size() const {
  return unlock_info_.size();
}
inline int PBZoneAccessInteraction::unlock_info_size() const {
  return _internal_unlock_info_size();
}
inline void PBZoneAccessInteraction::clear_unlock_info() {
  unlock_info_.Clear();
}
inline ::PBUpgradeInfo* PBZoneAccessInteraction::mutable_unlock_info(int index) {
  // @@protoc_insertion_point(field_mutable:PBZoneAccessInteraction.unlock_info)
  return unlock_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgradeInfo >*
PBZoneAccessInteraction::mutable_unlock_info() {
  // @@protoc_insertion_point(field_mutable_list:PBZoneAccessInteraction.unlock_info)
  return &unlock_info_;
}
inline const ::PBUpgradeInfo& PBZoneAccessInteraction::_internal_unlock_info(int index) const {
  return unlock_info_.Get(index);
}
inline const ::PBUpgradeInfo& PBZoneAccessInteraction::unlock_info(int index) const {
  // @@protoc_insertion_point(field_get:PBZoneAccessInteraction.unlock_info)
  return _internal_unlock_info(index);
}
inline ::PBUpgradeInfo* PBZoneAccessInteraction::_internal_add_unlock_info() {
  return unlock_info_.Add();
}
inline ::PBUpgradeInfo* PBZoneAccessInteraction::add_unlock_info() {
  // @@protoc_insertion_point(field_add:PBZoneAccessInteraction.unlock_info)
  return _internal_add_unlock_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBUpgradeInfo >&
PBZoneAccessInteraction::unlock_info() const {
  // @@protoc_insertion_point(field_list:PBZoneAccessInteraction.unlock_info)
  return unlock_info_;
}

// int32 unlock_level = 4;
inline void PBZoneAccessInteraction::clear_unlock_level() {
  unlock_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBZoneAccessInteraction::_internal_unlock_level() const {
  return unlock_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBZoneAccessInteraction::unlock_level() const {
  // @@protoc_insertion_point(field_get:PBZoneAccessInteraction.unlock_level)
  return _internal_unlock_level();
}
inline void PBZoneAccessInteraction::_internal_set_unlock_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  unlock_level_ = value;
}
inline void PBZoneAccessInteraction::set_unlock_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unlock_level(value);
  // @@protoc_insertion_point(field_set:PBZoneAccessInteraction.unlock_level)
}

// -------------------------------------------------------------------

// PBShopInteraction

// -------------------------------------------------------------------

// PBDialogInteraction

// bool needs_database = 1;
inline void PBDialogInteraction::clear_needs_database() {
  needs_database_ = false;
}
inline bool PBDialogInteraction::_internal_needs_database() const {
  return needs_database_;
}
inline bool PBDialogInteraction::needs_database() const {
  // @@protoc_insertion_point(field_get:PBDialogInteraction.needs_database)
  return _internal_needs_database();
}
inline void PBDialogInteraction::_internal_set_needs_database(bool value) {
  
  needs_database_ = value;
}
inline void PBDialogInteraction::set_needs_database(bool value) {
  _internal_set_needs_database(value);
  // @@protoc_insertion_point(field_set:PBDialogInteraction.needs_database)
}

// repeated .PBDialogInfo info = 2;
inline int PBDialogInteraction::_internal_info_size() const {
  return info_.size();
}
inline int PBDialogInteraction::info_size() const {
  return _internal_info_size();
}
inline void PBDialogInteraction::clear_info() {
  info_.Clear();
}
inline ::PBDialogInfo* PBDialogInteraction::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:PBDialogInteraction.info)
  return info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBDialogInfo >*
PBDialogInteraction::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:PBDialogInteraction.info)
  return &info_;
}
inline const ::PBDialogInfo& PBDialogInteraction::_internal_info(int index) const {
  return info_.Get(index);
}
inline const ::PBDialogInfo& PBDialogInteraction::info(int index) const {
  // @@protoc_insertion_point(field_get:PBDialogInteraction.info)
  return _internal_info(index);
}
inline ::PBDialogInfo* PBDialogInteraction::_internal_add_info() {
  return info_.Add();
}
inline ::PBDialogInfo* PBDialogInteraction::add_info() {
  // @@protoc_insertion_point(field_add:PBDialogInteraction.info)
  return _internal_add_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBDialogInfo >&
PBDialogInteraction::info() const {
  // @@protoc_insertion_point(field_list:PBDialogInteraction.info)
  return info_;
}

// int32 current_dialog = 3;
inline void PBDialogInteraction::clear_current_dialog() {
  current_dialog_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBDialogInteraction::_internal_current_dialog() const {
  return current_dialog_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBDialogInteraction::current_dialog() const {
  // @@protoc_insertion_point(field_get:PBDialogInteraction.current_dialog)
  return _internal_current_dialog();
}
inline void PBDialogInteraction::_internal_set_current_dialog(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  current_dialog_ = value;
}
inline void PBDialogInteraction::set_current_dialog(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_current_dialog(value);
  // @@protoc_insertion_point(field_set:PBDialogInteraction.current_dialog)
}

// -------------------------------------------------------------------

// PBDialogInfo

// string text = 1;
inline void PBDialogInfo::clear_text() {
  text_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& PBDialogInfo::text() const {
  // @@protoc_insertion_point(field_get:PBDialogInfo.text)
  return _internal_text();
}
inline void PBDialogInfo::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:PBDialogInfo.text)
}
inline std::string* PBDialogInfo::mutable_text() {
  // @@protoc_insertion_point(field_mutable:PBDialogInfo.text)
  return _internal_mutable_text();
}
inline const std::string& PBDialogInfo::_internal_text() const {
  return text_.Get();
}
inline void PBDialogInfo::_internal_set_text(const std::string& value) {
  
  text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PBDialogInfo::set_text(std::string&& value) {
  
  text_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:PBDialogInfo.text)
}
inline void PBDialogInfo::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:PBDialogInfo.text)
}
inline void PBDialogInfo::set_text(const char* value,
    size_t size) {
  
  text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:PBDialogInfo.text)
}
inline std::string* PBDialogInfo::_internal_mutable_text() {
  
  return text_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PBDialogInfo::release_text() {
  // @@protoc_insertion_point(field_release:PBDialogInfo.text)
  return text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PBDialogInfo::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:PBDialogInfo.text)
}
inline std::string* PBDialogInfo::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PBDialogInfo.text)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return text_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PBDialogInfo::unsafe_arena_set_allocated_text(
    std::string* text) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (text != nullptr) {
    
  } else {
    
  }
  text_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      text, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBDialogInfo.text)
}

// string npc_image = 2;
inline void PBDialogInfo::clear_npc_image() {
  npc_image_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& PBDialogInfo::npc_image() const {
  // @@protoc_insertion_point(field_get:PBDialogInfo.npc_image)
  return _internal_npc_image();
}
inline void PBDialogInfo::set_npc_image(const std::string& value) {
  _internal_set_npc_image(value);
  // @@protoc_insertion_point(field_set:PBDialogInfo.npc_image)
}
inline std::string* PBDialogInfo::mutable_npc_image() {
  // @@protoc_insertion_point(field_mutable:PBDialogInfo.npc_image)
  return _internal_mutable_npc_image();
}
inline const std::string& PBDialogInfo::_internal_npc_image() const {
  return npc_image_.Get();
}
inline void PBDialogInfo::_internal_set_npc_image(const std::string& value) {
  
  npc_image_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PBDialogInfo::set_npc_image(std::string&& value) {
  
  npc_image_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:PBDialogInfo.npc_image)
}
inline void PBDialogInfo::set_npc_image(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  npc_image_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:PBDialogInfo.npc_image)
}
inline void PBDialogInfo::set_npc_image(const char* value,
    size_t size) {
  
  npc_image_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:PBDialogInfo.npc_image)
}
inline std::string* PBDialogInfo::_internal_mutable_npc_image() {
  
  return npc_image_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PBDialogInfo::release_npc_image() {
  // @@protoc_insertion_point(field_release:PBDialogInfo.npc_image)
  return npc_image_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PBDialogInfo::set_allocated_npc_image(std::string* npc_image) {
  if (npc_image != nullptr) {
    
  } else {
    
  }
  npc_image_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), npc_image,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:PBDialogInfo.npc_image)
}
inline std::string* PBDialogInfo::unsafe_arena_release_npc_image() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PBDialogInfo.npc_image)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return npc_image_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PBDialogInfo::unsafe_arena_set_allocated_npc_image(
    std::string* npc_image) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (npc_image != nullptr) {
    
  } else {
    
  }
  npc_image_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      npc_image, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBDialogInfo.npc_image)
}

// bool more_text = 3;
inline void PBDialogInfo::clear_more_text() {
  more_text_ = false;
}
inline bool PBDialogInfo::_internal_more_text() const {
  return more_text_;
}
inline bool PBDialogInfo::more_text() const {
  // @@protoc_insertion_point(field_get:PBDialogInfo.more_text)
  return _internal_more_text();
}
inline void PBDialogInfo::_internal_set_more_text(bool value) {
  
  more_text_ = value;
}
inline void PBDialogInfo::set_more_text(bool value) {
  _internal_set_more_text(value);
  // @@protoc_insertion_point(field_set:PBDialogInfo.more_text)
}

// repeated .PBResponseOption response_options = 4;
inline int PBDialogInfo::_internal_response_options_size() const {
  return response_options_.size();
}
inline int PBDialogInfo::response_options_size() const {
  return _internal_response_options_size();
}
inline void PBDialogInfo::clear_response_options() {
  response_options_.Clear();
}
inline ::PBResponseOption* PBDialogInfo::mutable_response_options(int index) {
  // @@protoc_insertion_point(field_mutable:PBDialogInfo.response_options)
  return response_options_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBResponseOption >*
PBDialogInfo::mutable_response_options() {
  // @@protoc_insertion_point(field_mutable_list:PBDialogInfo.response_options)
  return &response_options_;
}
inline const ::PBResponseOption& PBDialogInfo::_internal_response_options(int index) const {
  return response_options_.Get(index);
}
inline const ::PBResponseOption& PBDialogInfo::response_options(int index) const {
  // @@protoc_insertion_point(field_get:PBDialogInfo.response_options)
  return _internal_response_options(index);
}
inline ::PBResponseOption* PBDialogInfo::_internal_add_response_options() {
  return response_options_.Add();
}
inline ::PBResponseOption* PBDialogInfo::add_response_options() {
  // @@protoc_insertion_point(field_add:PBDialogInfo.response_options)
  return _internal_add_response_options();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PBResponseOption >&
PBDialogInfo::response_options() const {
  // @@protoc_insertion_point(field_list:PBDialogInfo.response_options)
  return response_options_;
}

// -------------------------------------------------------------------

// PBResponseOption

// string text = 1;
inline void PBResponseOption::clear_text() {
  text_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& PBResponseOption::text() const {
  // @@protoc_insertion_point(field_get:PBResponseOption.text)
  return _internal_text();
}
inline void PBResponseOption::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:PBResponseOption.text)
}
inline std::string* PBResponseOption::mutable_text() {
  // @@protoc_insertion_point(field_mutable:PBResponseOption.text)
  return _internal_mutable_text();
}
inline const std::string& PBResponseOption::_internal_text() const {
  return text_.Get();
}
inline void PBResponseOption::_internal_set_text(const std::string& value) {
  
  text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PBResponseOption::set_text(std::string&& value) {
  
  text_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:PBResponseOption.text)
}
inline void PBResponseOption::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:PBResponseOption.text)
}
inline void PBResponseOption::set_text(const char* value,
    size_t size) {
  
  text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:PBResponseOption.text)
}
inline std::string* PBResponseOption::_internal_mutable_text() {
  
  return text_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PBResponseOption::release_text() {
  // @@protoc_insertion_point(field_release:PBResponseOption.text)
  return text_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PBResponseOption::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:PBResponseOption.text)
}
inline std::string* PBResponseOption::unsafe_arena_release_text() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PBResponseOption.text)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return text_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PBResponseOption::unsafe_arena_set_allocated_text(
    std::string* text) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (text != nullptr) {
    
  } else {
    
  }
  text_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      text, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBResponseOption.text)
}

// int32 next_text = 2;
inline void PBResponseOption::clear_next_text() {
  next_text_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBResponseOption::_internal_next_text() const {
  return next_text_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PBResponseOption::next_text() const {
  // @@protoc_insertion_point(field_get:PBResponseOption.next_text)
  return _internal_next_text();
}
inline void PBResponseOption::_internal_set_next_text(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  next_text_ = value;
}
inline void PBResponseOption::set_next_text(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_next_text(value);
  // @@protoc_insertion_point(field_set:PBResponseOption.next_text)
}

// -------------------------------------------------------------------

// PBQuestInteraction

// -------------------------------------------------------------------

// PBCustomInteraction

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::PBInteractionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBInteractionType>() {
  return ::PBInteractionType_descriptor();
}
template <> struct is_proto_enum< ::PBUpgradeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBUpgradeType>() {
  return ::PBUpgradeType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_interaction_2eproto
