// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interaction.proto

#include "interaction.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR PBInteraction::PBInteraction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.types_)*/{}
  , /*decltype(_impl_._types_cached_byte_size_)*/{0}
  , /*decltype(_impl_.map_icon_paths_)*/{}
  , /*decltype(_impl_.interaction_list_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.interaction_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.post_info_)*/nullptr
  , /*decltype(_impl_.zone_access_info_)*/nullptr
  , /*decltype(_impl_.shop_info_)*/nullptr
  , /*decltype(_impl_.quest_info_)*/nullptr
  , /*decltype(_impl_.dialog_info_)*/nullptr
  , /*decltype(_impl_.custom_info_)*/nullptr
  , /*decltype(_impl_.database_id_)*/0
  , /*decltype(_impl_.pos_x_)*/0
  , /*decltype(_impl_.pos_y_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PBInteractionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBInteractionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBInteractionDefaultTypeInternal() {}
  union {
    PBInteraction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBInteractionDefaultTypeInternal _PBInteraction_default_instance_;
PROTOBUF_CONSTEXPR PBPostInteraction::PBPostInteraction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resources_)*/{}
  , /*decltype(_impl_.upgrades_)*/{}
  , /*decltype(_impl_.last_collected_)*/nullptr
  , /*decltype(_impl_.post_skill_)*/0
  , /*decltype(_impl_.interact_xp_)*/0
  , /*decltype(_impl_.needs_database_)*/false
  , /*decltype(_impl_.capacity_upgrade_)*/0
  , /*decltype(_impl_.gen_second_upgrade_)*/0
  , /*decltype(_impl_.fortune_upgrade_)*/0
  , /*decltype(_impl_.resource_stored_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PBPostInteractionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBPostInteractionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBPostInteractionDefaultTypeInternal() {}
  union {
    PBPostInteraction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBPostInteractionDefaultTypeInternal _PBPostInteraction_default_instance_;
PROTOBUF_CONSTEXPR PBUpgrades::PBUpgrades(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/{}
  , /*decltype(_impl_.upgrade_type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PBUpgradesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBUpgradesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBUpgradesDefaultTypeInternal() {}
  union {
    PBUpgrades _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBUpgradesDefaultTypeInternal _PBUpgrades_default_instance_;
PROTOBUF_CONSTEXPR PBUpgradeInfo::PBUpgradeInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.upgrade_req_)*/{}
  , /*decltype(_impl_.current_stat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PBUpgradeInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBUpgradeInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBUpgradeInfoDefaultTypeInternal() {}
  union {
    PBUpgradeInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBUpgradeInfoDefaultTypeInternal _PBUpgradeInfo_default_instance_;
PROTOBUF_CONSTEXPR PBZoneAccessInteraction::PBZoneAccessInteraction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.unlock_info_)*/{}
  , /*decltype(_impl_.next_loc_)*/0
  , /*decltype(_impl_.needs_database_)*/false
  , /*decltype(_impl_.unlock_level_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PBZoneAccessInteractionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBZoneAccessInteractionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBZoneAccessInteractionDefaultTypeInternal() {}
  union {
    PBZoneAccessInteraction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBZoneAccessInteractionDefaultTypeInternal _PBZoneAccessInteraction_default_instance_;
PROTOBUF_CONSTEXPR PBShopInteraction::PBShopInteraction(
    ::_pbi::ConstantInitialized) {}
struct PBShopInteractionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBShopInteractionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBShopInteractionDefaultTypeInternal() {}
  union {
    PBShopInteraction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBShopInteractionDefaultTypeInternal _PBShopInteraction_default_instance_;
PROTOBUF_CONSTEXPR PBDialogInteraction::PBDialogInteraction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/{}
  , /*decltype(_impl_.needs_database_)*/false
  , /*decltype(_impl_.current_dialog_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PBDialogInteractionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBDialogInteractionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBDialogInteractionDefaultTypeInternal() {}
  union {
    PBDialogInteraction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBDialogInteractionDefaultTypeInternal _PBDialogInteraction_default_instance_;
PROTOBUF_CONSTEXPR PBDialogInfo::PBDialogInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.response_options_)*/{}
  , /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.npc_image_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.more_text_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PBDialogInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBDialogInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBDialogInfoDefaultTypeInternal() {}
  union {
    PBDialogInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBDialogInfoDefaultTypeInternal _PBDialogInfo_default_instance_;
PROTOBUF_CONSTEXPR PBResponseOption::PBResponseOption(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.next_text_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PBResponseOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBResponseOptionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBResponseOptionDefaultTypeInternal() {}
  union {
    PBResponseOption _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBResponseOptionDefaultTypeInternal _PBResponseOption_default_instance_;
PROTOBUF_CONSTEXPR PBQuestInteraction::PBQuestInteraction(
    ::_pbi::ConstantInitialized) {}
struct PBQuestInteractionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBQuestInteractionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBQuestInteractionDefaultTypeInternal() {}
  union {
    PBQuestInteraction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBQuestInteractionDefaultTypeInternal _PBQuestInteraction_default_instance_;
PROTOBUF_CONSTEXPR PBCustomInteraction::PBCustomInteraction(
    ::_pbi::ConstantInitialized) {}
struct PBCustomInteractionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBCustomInteractionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBCustomInteractionDefaultTypeInternal() {}
  union {
    PBCustomInteraction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBCustomInteractionDefaultTypeInternal _PBCustomInteraction_default_instance_;
static ::_pb::Metadata file_level_metadata_interaction_2eproto[11];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_interaction_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_interaction_2eproto = nullptr;

const uint32_t TableStruct_interaction_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.types_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.database_id_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.interaction_list_name_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.interaction_name_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.pos_x_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.pos_y_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.map_icon_paths_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.post_info_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.zone_access_info_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.shop_info_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.quest_info_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.dialog_info_),
  PROTOBUF_FIELD_OFFSET(::PBInteraction, _impl_.custom_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBPostInteraction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBPostInteraction, _impl_.resources_),
  PROTOBUF_FIELD_OFFSET(::PBPostInteraction, _impl_.post_skill_),
  PROTOBUF_FIELD_OFFSET(::PBPostInteraction, _impl_.interact_xp_),
  PROTOBUF_FIELD_OFFSET(::PBPostInteraction, _impl_.needs_database_),
  PROTOBUF_FIELD_OFFSET(::PBPostInteraction, _impl_.upgrades_),
  PROTOBUF_FIELD_OFFSET(::PBPostInteraction, _impl_.capacity_upgrade_),
  PROTOBUF_FIELD_OFFSET(::PBPostInteraction, _impl_.gen_second_upgrade_),
  PROTOBUF_FIELD_OFFSET(::PBPostInteraction, _impl_.fortune_upgrade_),
  PROTOBUF_FIELD_OFFSET(::PBPostInteraction, _impl_.resource_stored_),
  PROTOBUF_FIELD_OFFSET(::PBPostInteraction, _impl_.last_collected_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBUpgrades, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBUpgrades, _impl_.upgrade_type_),
  PROTOBUF_FIELD_OFFSET(::PBUpgrades, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBUpgradeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBUpgradeInfo, _impl_.current_stat_),
  PROTOBUF_FIELD_OFFSET(::PBUpgradeInfo, _impl_.upgrade_req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBZoneAccessInteraction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBZoneAccessInteraction, _impl_.next_loc_),
  PROTOBUF_FIELD_OFFSET(::PBZoneAccessInteraction, _impl_.needs_database_),
  PROTOBUF_FIELD_OFFSET(::PBZoneAccessInteraction, _impl_.unlock_info_),
  PROTOBUF_FIELD_OFFSET(::PBZoneAccessInteraction, _impl_.unlock_level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBShopInteraction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBDialogInteraction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBDialogInteraction, _impl_.needs_database_),
  PROTOBUF_FIELD_OFFSET(::PBDialogInteraction, _impl_.info_),
  PROTOBUF_FIELD_OFFSET(::PBDialogInteraction, _impl_.current_dialog_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBDialogInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBDialogInfo, _impl_.text_),
  PROTOBUF_FIELD_OFFSET(::PBDialogInfo, _impl_.npc_image_),
  PROTOBUF_FIELD_OFFSET(::PBDialogInfo, _impl_.more_text_),
  PROTOBUF_FIELD_OFFSET(::PBDialogInfo, _impl_.response_options_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBResponseOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBResponseOption, _impl_.text_),
  PROTOBUF_FIELD_OFFSET(::PBResponseOption, _impl_.next_text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBQuestInteraction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBCustomInteraction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::PBInteraction)},
  { 20, -1, -1, sizeof(::PBPostInteraction)},
  { 36, -1, -1, sizeof(::PBUpgrades)},
  { 44, -1, -1, sizeof(::PBUpgradeInfo)},
  { 52, -1, -1, sizeof(::PBZoneAccessInteraction)},
  { 62, -1, -1, sizeof(::PBShopInteraction)},
  { 68, -1, -1, sizeof(::PBDialogInteraction)},
  { 77, -1, -1, sizeof(::PBDialogInfo)},
  { 87, -1, -1, sizeof(::PBResponseOption)},
  { 95, -1, -1, sizeof(::PBQuestInteraction)},
  { 101, -1, -1, sizeof(::PBCustomInteraction)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_PBInteraction_default_instance_._instance,
  &::_PBPostInteraction_default_instance_._instance,
  &::_PBUpgrades_default_instance_._instance,
  &::_PBUpgradeInfo_default_instance_._instance,
  &::_PBZoneAccessInteraction_default_instance_._instance,
  &::_PBShopInteraction_default_instance_._instance,
  &::_PBDialogInteraction_default_instance_._instance,
  &::_PBDialogInfo_default_instance_._instance,
  &::_PBResponseOption_default_instance_._instance,
  &::_PBQuestInteraction_default_instance_._instance,
  &::_PBCustomInteraction_default_instance_._instance,
};

const char descriptor_table_protodef_interaction_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021interaction.proto\032\014player.proto\032\nitem."
  "proto\032\016location.proto\032\037google/protobuf/t"
  "imestamp.proto\"\314\003\n\rPBInteraction\022!\n\005type"
  "s\030\001 \003(\0162\022.PBInteractionType\022\023\n\013database_"
  "id\030\002 \001(\005\022\035\n\025interaction_list_name\030\003 \001(\t\022"
  "\030\n\020interaction_name\030\004 \001(\t\022\023\n\013description"
  "\030\005 \001(\t\022\r\n\005pos_x\030\006 \001(\005\022\r\n\005pos_y\030\007 \001(\005\022\026\n\016"
  "map_icon_paths\030\010 \003(\t\022%\n\tpost_info\030\t \001(\0132"
  "\022.PBPostInteraction\0222\n\020zone_access_info\030"
  "\n \001(\0132\030.PBZoneAccessInteraction\022%\n\tshop_"
  "info\030\013 \001(\0132\022.PBShopInteraction\022\'\n\nquest_"
  "info\030\014 \001(\0132\023.PBQuestInteraction\022)\n\013dialo"
  "g_info\030\r \001(\0132\024.PBDialogInteraction\022)\n\013cu"
  "stom_info\030\016 \001(\0132\024.PBCustomInteraction\"\300\002"
  "\n\021PBPostInteraction\022\036\n\tresources\030\001 \003(\0132\013"
  ".PBItemData\022#\n\npost_skill\030\002 \001(\0162\017.PBPlay"
  "erSkills\022\023\n\013interact_xp\030\003 \001(\005\022\026\n\016needs_d"
  "atabase\030\004 \001(\010\022\035\n\010upgrades\030\005 \003(\0132\013.PBUpgr"
  "ades\022\030\n\020capacity_upgrade\030\006 \001(\005\022\032\n\022gen_se"
  "cond_upgrade\030\007 \001(\005\022\027\n\017fortune_upgrade\030\010 "
  "\001(\005\022\027\n\017resource_stored\030\t \001(\005\0222\n\016last_col"
  "lected\030\n \001(\0132\032.google.protobuf.Timestamp"
  "\"P\n\nPBUpgrades\022$\n\014upgrade_type\030\001 \001(\0162\016.P"
  "BUpgradeType\022\034\n\004info\030\002 \003(\0132\016.PBUpgradeIn"
  "fo\"G\n\rPBUpgradeInfo\022\024\n\014current_stat\030\003 \001("
  "\002\022 \n\013upgrade_req\030\004 \003(\0132\013.PBItemData\"\215\001\n\027"
  "PBZoneAccessInteraction\022\037\n\010next_loc\030\001 \001("
  "\0162\r.PBLocationID\022\026\n\016needs_database\030\002 \001(\010"
  "\022#\n\013unlock_info\030\003 \003(\0132\016.PBUpgradeInfo\022\024\n"
  "\014unlock_level\030\004 \001(\005\"\023\n\021PBShopInteraction"
  "\"b\n\023PBDialogInteraction\022\026\n\016needs_databas"
  "e\030\001 \001(\010\022\033\n\004info\030\002 \003(\0132\r.PBDialogInfo\022\026\n\016"
  "current_dialog\030\003 \001(\005\"o\n\014PBDialogInfo\022\014\n\004"
  "text\030\001 \001(\t\022\021\n\tnpc_image\030\002 \001(\t\022\021\n\tmore_te"
  "xt\030\003 \001(\010\022+\n\020response_options\030\004 \003(\0132\021.PBR"
  "esponseOption\"3\n\020PBResponseOption\022\014\n\004tex"
  "t\030\001 \001(\t\022\021\n\tnext_text\030\002 \001(\005\"\024\n\022PBQuestInt"
  "eraction\"\025\n\023PBCustomInteraction*e\n\021PBInt"
  "eractionType\022\010\n\004NONE\020\000\022\010\n\004POST\020\001\022\017\n\013ZONE"
  "_ACCESS\020\002\022\t\n\005QUEST\020\003\022\010\n\004SHOP\020\004\022\n\n\006DIALOG"
  "\020\005\022\n\n\006CUSTOM\020\006*:\n\rPBUpgradeType\022\014\n\010CAPAC"
  "ITY\020\000\022\016\n\nGEN_SECOND\020\001\022\013\n\007FORTUNE\020\002b\006prot"
  "o3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_interaction_2eproto_deps[4] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_item_2eproto,
  &::descriptor_table_location_2eproto,
  &::descriptor_table_player_2eproto,
};
static ::_pbi::once_flag descriptor_table_interaction_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_interaction_2eproto = {
    false, false, 1682, descriptor_table_protodef_interaction_2eproto,
    "interaction.proto",
    &descriptor_table_interaction_2eproto_once, descriptor_table_interaction_2eproto_deps, 4, 11,
    schemas, file_default_instances, TableStruct_interaction_2eproto::offsets,
    file_level_metadata_interaction_2eproto, file_level_enum_descriptors_interaction_2eproto,
    file_level_service_descriptors_interaction_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_interaction_2eproto_getter() {
  return &descriptor_table_interaction_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_interaction_2eproto(&descriptor_table_interaction_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBInteractionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_interaction_2eproto);
  return file_level_enum_descriptors_interaction_2eproto[0];
}
bool PBInteractionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PBUpgradeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_interaction_2eproto);
  return file_level_enum_descriptors_interaction_2eproto[1];
}
bool PBUpgradeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class PBInteraction::_Internal {
 public:
  static const ::PBPostInteraction& post_info(const PBInteraction* msg);
  static const ::PBZoneAccessInteraction& zone_access_info(const PBInteraction* msg);
  static const ::PBShopInteraction& shop_info(const PBInteraction* msg);
  static const ::PBQuestInteraction& quest_info(const PBInteraction* msg);
  static const ::PBDialogInteraction& dialog_info(const PBInteraction* msg);
  static const ::PBCustomInteraction& custom_info(const PBInteraction* msg);
};

const ::PBPostInteraction&
PBInteraction::_Internal::post_info(const PBInteraction* msg) {
  return *msg->_impl_.post_info_;
}
const ::PBZoneAccessInteraction&
PBInteraction::_Internal::zone_access_info(const PBInteraction* msg) {
  return *msg->_impl_.zone_access_info_;
}
const ::PBShopInteraction&
PBInteraction::_Internal::shop_info(const PBInteraction* msg) {
  return *msg->_impl_.shop_info_;
}
const ::PBQuestInteraction&
PBInteraction::_Internal::quest_info(const PBInteraction* msg) {
  return *msg->_impl_.quest_info_;
}
const ::PBDialogInteraction&
PBInteraction::_Internal::dialog_info(const PBInteraction* msg) {
  return *msg->_impl_.dialog_info_;
}
const ::PBCustomInteraction&
PBInteraction::_Internal::custom_info(const PBInteraction* msg) {
  return *msg->_impl_.custom_info_;
}
PBInteraction::PBInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBInteraction)
}
PBInteraction::PBInteraction(const PBInteraction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBInteraction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.types_){from._impl_.types_}
    , /*decltype(_impl_._types_cached_byte_size_)*/{0}
    , decltype(_impl_.map_icon_paths_){from._impl_.map_icon_paths_}
    , decltype(_impl_.interaction_list_name_){}
    , decltype(_impl_.interaction_name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.post_info_){nullptr}
    , decltype(_impl_.zone_access_info_){nullptr}
    , decltype(_impl_.shop_info_){nullptr}
    , decltype(_impl_.quest_info_){nullptr}
    , decltype(_impl_.dialog_info_){nullptr}
    , decltype(_impl_.custom_info_){nullptr}
    , decltype(_impl_.database_id_){}
    , decltype(_impl_.pos_x_){}
    , decltype(_impl_.pos_y_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.interaction_list_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_list_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_interaction_list_name().empty()) {
    _this->_impl_.interaction_list_name_.Set(from._internal_interaction_list_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.interaction_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_interaction_name().empty()) {
    _this->_impl_.interaction_name_.Set(from._internal_interaction_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_post_info()) {
    _this->_impl_.post_info_ = new ::PBPostInteraction(*from._impl_.post_info_);
  }
  if (from._internal_has_zone_access_info()) {
    _this->_impl_.zone_access_info_ = new ::PBZoneAccessInteraction(*from._impl_.zone_access_info_);
  }
  if (from._internal_has_shop_info()) {
    _this->_impl_.shop_info_ = new ::PBShopInteraction(*from._impl_.shop_info_);
  }
  if (from._internal_has_quest_info()) {
    _this->_impl_.quest_info_ = new ::PBQuestInteraction(*from._impl_.quest_info_);
  }
  if (from._internal_has_dialog_info()) {
    _this->_impl_.dialog_info_ = new ::PBDialogInteraction(*from._impl_.dialog_info_);
  }
  if (from._internal_has_custom_info()) {
    _this->_impl_.custom_info_ = new ::PBCustomInteraction(*from._impl_.custom_info_);
  }
  ::memcpy(&_impl_.database_id_, &from._impl_.database_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.pos_y_) -
    reinterpret_cast<char*>(&_impl_.database_id_)) + sizeof(_impl_.pos_y_));
  // @@protoc_insertion_point(copy_constructor:PBInteraction)
}

inline void PBInteraction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.types_){arena}
    , /*decltype(_impl_._types_cached_byte_size_)*/{0}
    , decltype(_impl_.map_icon_paths_){arena}
    , decltype(_impl_.interaction_list_name_){}
    , decltype(_impl_.interaction_name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.post_info_){nullptr}
    , decltype(_impl_.zone_access_info_){nullptr}
    , decltype(_impl_.shop_info_){nullptr}
    , decltype(_impl_.quest_info_){nullptr}
    , decltype(_impl_.dialog_info_){nullptr}
    , decltype(_impl_.custom_info_){nullptr}
    , decltype(_impl_.database_id_){0}
    , decltype(_impl_.pos_x_){0}
    , decltype(_impl_.pos_y_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.interaction_list_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_list_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.interaction_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBInteraction::~PBInteraction() {
  // @@protoc_insertion_point(destructor:PBInteraction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBInteraction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.types_.~RepeatedField();
  _impl_.map_icon_paths_.~RepeatedPtrField();
  _impl_.interaction_list_name_.Destroy();
  _impl_.interaction_name_.Destroy();
  _impl_.description_.Destroy();
  if (this != internal_default_instance()) delete _impl_.post_info_;
  if (this != internal_default_instance()) delete _impl_.zone_access_info_;
  if (this != internal_default_instance()) delete _impl_.shop_info_;
  if (this != internal_default_instance()) delete _impl_.quest_info_;
  if (this != internal_default_instance()) delete _impl_.dialog_info_;
  if (this != internal_default_instance()) delete _impl_.custom_info_;
}

void PBInteraction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBInteraction::Clear() {
// @@protoc_insertion_point(message_clear_start:PBInteraction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.types_.Clear();
  _impl_.map_icon_paths_.Clear();
  _impl_.interaction_list_name_.ClearToEmpty();
  _impl_.interaction_name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.post_info_ != nullptr) {
    delete _impl_.post_info_;
  }
  _impl_.post_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.zone_access_info_ != nullptr) {
    delete _impl_.zone_access_info_;
  }
  _impl_.zone_access_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.shop_info_ != nullptr) {
    delete _impl_.shop_info_;
  }
  _impl_.shop_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.quest_info_ != nullptr) {
    delete _impl_.quest_info_;
  }
  _impl_.quest_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.dialog_info_ != nullptr) {
    delete _impl_.dialog_info_;
  }
  _impl_.dialog_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.custom_info_ != nullptr) {
    delete _impl_.custom_info_;
  }
  _impl_.custom_info_ = nullptr;
  ::memset(&_impl_.database_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.pos_y_) -
      reinterpret_cast<char*>(&_impl_.database_id_)) + sizeof(_impl_.pos_y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBInteraction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PBInteractionType types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_types(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_types(static_cast<::PBInteractionType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 database_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.database_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string interaction_list_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_interaction_list_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PBInteraction.interaction_list_name"));
        } else
          goto handle_unusual;
        continue;
      // string interaction_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_interaction_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PBInteraction.interaction_name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PBInteraction.description"));
        } else
          goto handle_unusual;
        continue;
      // int32 pos_x = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.pos_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 pos_y = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.pos_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string map_icon_paths = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_map_icon_paths();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "PBInteraction.map_icon_paths"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .PBPostInteraction post_info = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_post_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PBZoneAccessInteraction zone_access_info = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_zone_access_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PBShopInteraction shop_info = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_shop_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PBQuestInteraction quest_info = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_quest_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PBDialogInteraction dialog_info = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_dialog_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PBCustomInteraction custom_info = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBInteraction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBInteraction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBInteractionType types = 1;
  {
    int byte_size = _impl_._types_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, _impl_.types_, byte_size, target);
    }
  }

  // int32 database_id = 2;
  if (this->_internal_database_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_database_id(), target);
  }

  // string interaction_list_name = 3;
  if (!this->_internal_interaction_list_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_interaction_list_name().data(), static_cast<int>(this->_internal_interaction_list_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBInteraction.interaction_list_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_interaction_list_name(), target);
  }

  // string interaction_name = 4;
  if (!this->_internal_interaction_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_interaction_name().data(), static_cast<int>(this->_internal_interaction_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBInteraction.interaction_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_interaction_name(), target);
  }

  // string description = 5;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBInteraction.description");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_description(), target);
  }

  // int32 pos_x = 6;
  if (this->_internal_pos_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_pos_x(), target);
  }

  // int32 pos_y = 7;
  if (this->_internal_pos_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_pos_y(), target);
  }

  // repeated string map_icon_paths = 8;
  for (int i = 0, n = this->_internal_map_icon_paths_size(); i < n; i++) {
    const auto& s = this->_internal_map_icon_paths(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBInteraction.map_icon_paths");
    target = stream->WriteString(8, s, target);
  }

  // .PBPostInteraction post_info = 9;
  if (this->_internal_has_post_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::post_info(this),
        _Internal::post_info(this).GetCachedSize(), target, stream);
  }

  // .PBZoneAccessInteraction zone_access_info = 10;
  if (this->_internal_has_zone_access_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::zone_access_info(this),
        _Internal::zone_access_info(this).GetCachedSize(), target, stream);
  }

  // .PBShopInteraction shop_info = 11;
  if (this->_internal_has_shop_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::shop_info(this),
        _Internal::shop_info(this).GetCachedSize(), target, stream);
  }

  // .PBQuestInteraction quest_info = 12;
  if (this->_internal_has_quest_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::quest_info(this),
        _Internal::quest_info(this).GetCachedSize(), target, stream);
  }

  // .PBDialogInteraction dialog_info = 13;
  if (this->_internal_has_dialog_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::dialog_info(this),
        _Internal::dialog_info(this).GetCachedSize(), target, stream);
  }

  // .PBCustomInteraction custom_info = 14;
  if (this->_internal_has_custom_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::custom_info(this),
        _Internal::custom_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBInteraction)
  return target;
}

size_t PBInteraction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBInteraction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBInteractionType types = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._types_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string map_icon_paths = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.map_icon_paths_.size());
  for (int i = 0, n = _impl_.map_icon_paths_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.map_icon_paths_.Get(i));
  }

  // string interaction_list_name = 3;
  if (!this->_internal_interaction_list_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_interaction_list_name());
  }

  // string interaction_name = 4;
  if (!this->_internal_interaction_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_interaction_name());
  }

  // string description = 5;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .PBPostInteraction post_info = 9;
  if (this->_internal_has_post_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.post_info_);
  }

  // .PBZoneAccessInteraction zone_access_info = 10;
  if (this->_internal_has_zone_access_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.zone_access_info_);
  }

  // .PBShopInteraction shop_info = 11;
  if (this->_internal_has_shop_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.shop_info_);
  }

  // .PBQuestInteraction quest_info = 12;
  if (this->_internal_has_quest_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.quest_info_);
  }

  // .PBDialogInteraction dialog_info = 13;
  if (this->_internal_has_dialog_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dialog_info_);
  }

  // .PBCustomInteraction custom_info = 14;
  if (this->_internal_has_custom_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.custom_info_);
  }

  // int32 database_id = 2;
  if (this->_internal_database_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_database_id());
  }

  // int32 pos_x = 6;
  if (this->_internal_pos_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_pos_x());
  }

  // int32 pos_y = 7;
  if (this->_internal_pos_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_pos_y());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBInteraction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBInteraction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBInteraction::GetClassData() const { return &_class_data_; }


void PBInteraction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBInteraction*>(&to_msg);
  auto& from = static_cast<const PBInteraction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBInteraction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.types_.MergeFrom(from._impl_.types_);
  _this->_impl_.map_icon_paths_.MergeFrom(from._impl_.map_icon_paths_);
  if (!from._internal_interaction_list_name().empty()) {
    _this->_internal_set_interaction_list_name(from._internal_interaction_list_name());
  }
  if (!from._internal_interaction_name().empty()) {
    _this->_internal_set_interaction_name(from._internal_interaction_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_has_post_info()) {
    _this->_internal_mutable_post_info()->::PBPostInteraction::MergeFrom(
        from._internal_post_info());
  }
  if (from._internal_has_zone_access_info()) {
    _this->_internal_mutable_zone_access_info()->::PBZoneAccessInteraction::MergeFrom(
        from._internal_zone_access_info());
  }
  if (from._internal_has_shop_info()) {
    _this->_internal_mutable_shop_info()->::PBShopInteraction::MergeFrom(
        from._internal_shop_info());
  }
  if (from._internal_has_quest_info()) {
    _this->_internal_mutable_quest_info()->::PBQuestInteraction::MergeFrom(
        from._internal_quest_info());
  }
  if (from._internal_has_dialog_info()) {
    _this->_internal_mutable_dialog_info()->::PBDialogInteraction::MergeFrom(
        from._internal_dialog_info());
  }
  if (from._internal_has_custom_info()) {
    _this->_internal_mutable_custom_info()->::PBCustomInteraction::MergeFrom(
        from._internal_custom_info());
  }
  if (from._internal_database_id() != 0) {
    _this->_internal_set_database_id(from._internal_database_id());
  }
  if (from._internal_pos_x() != 0) {
    _this->_internal_set_pos_x(from._internal_pos_x());
  }
  if (from._internal_pos_y() != 0) {
    _this->_internal_set_pos_y(from._internal_pos_y());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBInteraction::CopyFrom(const PBInteraction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBInteraction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBInteraction::IsInitialized() const {
  return true;
}

void PBInteraction::InternalSwap(PBInteraction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.types_.InternalSwap(&other->_impl_.types_);
  _impl_.map_icon_paths_.InternalSwap(&other->_impl_.map_icon_paths_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.interaction_list_name_, lhs_arena,
      &other->_impl_.interaction_list_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.interaction_name_, lhs_arena,
      &other->_impl_.interaction_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBInteraction, _impl_.pos_y_)
      + sizeof(PBInteraction::_impl_.pos_y_)
      - PROTOBUF_FIELD_OFFSET(PBInteraction, _impl_.post_info_)>(
          reinterpret_cast<char*>(&_impl_.post_info_),
          reinterpret_cast<char*>(&other->_impl_.post_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBInteraction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_interaction_2eproto_getter, &descriptor_table_interaction_2eproto_once,
      file_level_metadata_interaction_2eproto[0]);
}

// ===================================================================

class PBPostInteraction::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& last_collected(const PBPostInteraction* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
PBPostInteraction::_Internal::last_collected(const PBPostInteraction* msg) {
  return *msg->_impl_.last_collected_;
}
void PBPostInteraction::clear_resources() {
  _impl_.resources_.Clear();
}
void PBPostInteraction::clear_last_collected() {
  if (GetArenaForAllocation() == nullptr && _impl_.last_collected_ != nullptr) {
    delete _impl_.last_collected_;
  }
  _impl_.last_collected_ = nullptr;
}
PBPostInteraction::PBPostInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBPostInteraction)
}
PBPostInteraction::PBPostInteraction(const PBPostInteraction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBPostInteraction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resources_){from._impl_.resources_}
    , decltype(_impl_.upgrades_){from._impl_.upgrades_}
    , decltype(_impl_.last_collected_){nullptr}
    , decltype(_impl_.post_skill_){}
    , decltype(_impl_.interact_xp_){}
    , decltype(_impl_.needs_database_){}
    , decltype(_impl_.capacity_upgrade_){}
    , decltype(_impl_.gen_second_upgrade_){}
    , decltype(_impl_.fortune_upgrade_){}
    , decltype(_impl_.resource_stored_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_last_collected()) {
    _this->_impl_.last_collected_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.last_collected_);
  }
  ::memcpy(&_impl_.post_skill_, &from._impl_.post_skill_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.resource_stored_) -
    reinterpret_cast<char*>(&_impl_.post_skill_)) + sizeof(_impl_.resource_stored_));
  // @@protoc_insertion_point(copy_constructor:PBPostInteraction)
}

inline void PBPostInteraction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resources_){arena}
    , decltype(_impl_.upgrades_){arena}
    , decltype(_impl_.last_collected_){nullptr}
    , decltype(_impl_.post_skill_){0}
    , decltype(_impl_.interact_xp_){0}
    , decltype(_impl_.needs_database_){false}
    , decltype(_impl_.capacity_upgrade_){0}
    , decltype(_impl_.gen_second_upgrade_){0}
    , decltype(_impl_.fortune_upgrade_){0}
    , decltype(_impl_.resource_stored_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PBPostInteraction::~PBPostInteraction() {
  // @@protoc_insertion_point(destructor:PBPostInteraction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBPostInteraction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resources_.~RepeatedPtrField();
  _impl_.upgrades_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.last_collected_;
}

void PBPostInteraction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBPostInteraction::Clear() {
// @@protoc_insertion_point(message_clear_start:PBPostInteraction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resources_.Clear();
  _impl_.upgrades_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.last_collected_ != nullptr) {
    delete _impl_.last_collected_;
  }
  _impl_.last_collected_ = nullptr;
  ::memset(&_impl_.post_skill_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.resource_stored_) -
      reinterpret_cast<char*>(&_impl_.post_skill_)) + sizeof(_impl_.resource_stored_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBPostInteraction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PBItemData resources = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resources(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .PBPlayerSkills post_skill = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_post_skill(static_cast<::PBPlayerSkills>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 interact_xp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.interact_xp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool needs_database = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.needs_database_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .PBUpgrades upgrades = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_upgrades(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 capacity_upgrade = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.capacity_upgrade_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 gen_second_upgrade = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.gen_second_upgrade_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 fortune_upgrade = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.fortune_upgrade_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 resource_stored = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.resource_stored_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp last_collected = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_last_collected(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBPostInteraction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBPostInteraction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBItemData resources = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resources_size()); i < n; i++) {
    const auto& repfield = this->_internal_resources(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .PBPlayerSkills post_skill = 2;
  if (this->_internal_post_skill() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_post_skill(), target);
  }

  // int32 interact_xp = 3;
  if (this->_internal_interact_xp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_interact_xp(), target);
  }

  // bool needs_database = 4;
  if (this->_internal_needs_database() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_needs_database(), target);
  }

  // repeated .PBUpgrades upgrades = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_upgrades_size()); i < n; i++) {
    const auto& repfield = this->_internal_upgrades(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 capacity_upgrade = 6;
  if (this->_internal_capacity_upgrade() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_capacity_upgrade(), target);
  }

  // int32 gen_second_upgrade = 7;
  if (this->_internal_gen_second_upgrade() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_gen_second_upgrade(), target);
  }

  // int32 fortune_upgrade = 8;
  if (this->_internal_fortune_upgrade() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_fortune_upgrade(), target);
  }

  // int32 resource_stored = 9;
  if (this->_internal_resource_stored() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_resource_stored(), target);
  }

  // .google.protobuf.Timestamp last_collected = 10;
  if (this->_internal_has_last_collected()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::last_collected(this),
        _Internal::last_collected(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBPostInteraction)
  return target;
}

size_t PBPostInteraction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBPostInteraction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBItemData resources = 1;
  total_size += 1UL * this->_internal_resources_size();
  for (const auto& msg : this->_impl_.resources_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .PBUpgrades upgrades = 5;
  total_size += 1UL * this->_internal_upgrades_size();
  for (const auto& msg : this->_impl_.upgrades_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.Timestamp last_collected = 10;
  if (this->_internal_has_last_collected()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.last_collected_);
  }

  // .PBPlayerSkills post_skill = 2;
  if (this->_internal_post_skill() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_post_skill());
  }

  // int32 interact_xp = 3;
  if (this->_internal_interact_xp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_interact_xp());
  }

  // bool needs_database = 4;
  if (this->_internal_needs_database() != 0) {
    total_size += 1 + 1;
  }

  // int32 capacity_upgrade = 6;
  if (this->_internal_capacity_upgrade() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_capacity_upgrade());
  }

  // int32 gen_second_upgrade = 7;
  if (this->_internal_gen_second_upgrade() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_gen_second_upgrade());
  }

  // int32 fortune_upgrade = 8;
  if (this->_internal_fortune_upgrade() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_fortune_upgrade());
  }

  // int32 resource_stored = 9;
  if (this->_internal_resource_stored() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_resource_stored());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBPostInteraction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBPostInteraction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBPostInteraction::GetClassData() const { return &_class_data_; }


void PBPostInteraction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBPostInteraction*>(&to_msg);
  auto& from = static_cast<const PBPostInteraction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBPostInteraction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resources_.MergeFrom(from._impl_.resources_);
  _this->_impl_.upgrades_.MergeFrom(from._impl_.upgrades_);
  if (from._internal_has_last_collected()) {
    _this->_internal_mutable_last_collected()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_last_collected());
  }
  if (from._internal_post_skill() != 0) {
    _this->_internal_set_post_skill(from._internal_post_skill());
  }
  if (from._internal_interact_xp() != 0) {
    _this->_internal_set_interact_xp(from._internal_interact_xp());
  }
  if (from._internal_needs_database() != 0) {
    _this->_internal_set_needs_database(from._internal_needs_database());
  }
  if (from._internal_capacity_upgrade() != 0) {
    _this->_internal_set_capacity_upgrade(from._internal_capacity_upgrade());
  }
  if (from._internal_gen_second_upgrade() != 0) {
    _this->_internal_set_gen_second_upgrade(from._internal_gen_second_upgrade());
  }
  if (from._internal_fortune_upgrade() != 0) {
    _this->_internal_set_fortune_upgrade(from._internal_fortune_upgrade());
  }
  if (from._internal_resource_stored() != 0) {
    _this->_internal_set_resource_stored(from._internal_resource_stored());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBPostInteraction::CopyFrom(const PBPostInteraction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBPostInteraction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPostInteraction::IsInitialized() const {
  return true;
}

void PBPostInteraction::InternalSwap(PBPostInteraction* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resources_.InternalSwap(&other->_impl_.resources_);
  _impl_.upgrades_.InternalSwap(&other->_impl_.upgrades_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBPostInteraction, _impl_.resource_stored_)
      + sizeof(PBPostInteraction::_impl_.resource_stored_)
      - PROTOBUF_FIELD_OFFSET(PBPostInteraction, _impl_.last_collected_)>(
          reinterpret_cast<char*>(&_impl_.last_collected_),
          reinterpret_cast<char*>(&other->_impl_.last_collected_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBPostInteraction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_interaction_2eproto_getter, &descriptor_table_interaction_2eproto_once,
      file_level_metadata_interaction_2eproto[1]);
}

// ===================================================================

class PBUpgrades::_Internal {
 public:
};

PBUpgrades::PBUpgrades(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBUpgrades)
}
PBUpgrades::PBUpgrades(const PBUpgrades& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBUpgrades* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){from._impl_.info_}
    , decltype(_impl_.upgrade_type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.upgrade_type_ = from._impl_.upgrade_type_;
  // @@protoc_insertion_point(copy_constructor:PBUpgrades)
}

inline void PBUpgrades::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){arena}
    , decltype(_impl_.upgrade_type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PBUpgrades::~PBUpgrades() {
  // @@protoc_insertion_point(destructor:PBUpgrades)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBUpgrades::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.info_.~RepeatedPtrField();
}

void PBUpgrades::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBUpgrades::Clear() {
// @@protoc_insertion_point(message_clear_start:PBUpgrades)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.info_.Clear();
  _impl_.upgrade_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBUpgrades::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .PBUpgradeType upgrade_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_upgrade_type(static_cast<::PBUpgradeType>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .PBUpgradeInfo info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBUpgrades::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBUpgrades)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBUpgradeType upgrade_type = 1;
  if (this->_internal_upgrade_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_upgrade_type(), target);
  }

  // repeated .PBUpgradeInfo info = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_info(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBUpgrades)
  return target;
}

size_t PBUpgrades::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBUpgrades)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBUpgradeInfo info = 2;
  total_size += 1UL * this->_internal_info_size();
  for (const auto& msg : this->_impl_.info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .PBUpgradeType upgrade_type = 1;
  if (this->_internal_upgrade_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_upgrade_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBUpgrades::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBUpgrades::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBUpgrades::GetClassData() const { return &_class_data_; }


void PBUpgrades::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBUpgrades*>(&to_msg);
  auto& from = static_cast<const PBUpgrades&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBUpgrades)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.info_.MergeFrom(from._impl_.info_);
  if (from._internal_upgrade_type() != 0) {
    _this->_internal_set_upgrade_type(from._internal_upgrade_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBUpgrades::CopyFrom(const PBUpgrades& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBUpgrades)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBUpgrades::IsInitialized() const {
  return true;
}

void PBUpgrades::InternalSwap(PBUpgrades* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.info_.InternalSwap(&other->_impl_.info_);
  swap(_impl_.upgrade_type_, other->_impl_.upgrade_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBUpgrades::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_interaction_2eproto_getter, &descriptor_table_interaction_2eproto_once,
      file_level_metadata_interaction_2eproto[2]);
}

// ===================================================================

class PBUpgradeInfo::_Internal {
 public:
};

void PBUpgradeInfo::clear_upgrade_req() {
  _impl_.upgrade_req_.Clear();
}
PBUpgradeInfo::PBUpgradeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBUpgradeInfo)
}
PBUpgradeInfo::PBUpgradeInfo(const PBUpgradeInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBUpgradeInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.upgrade_req_){from._impl_.upgrade_req_}
    , decltype(_impl_.current_stat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.current_stat_ = from._impl_.current_stat_;
  // @@protoc_insertion_point(copy_constructor:PBUpgradeInfo)
}

inline void PBUpgradeInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.upgrade_req_){arena}
    , decltype(_impl_.current_stat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PBUpgradeInfo::~PBUpgradeInfo() {
  // @@protoc_insertion_point(destructor:PBUpgradeInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBUpgradeInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.upgrade_req_.~RepeatedPtrField();
}

void PBUpgradeInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBUpgradeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBUpgradeInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.upgrade_req_.Clear();
  _impl_.current_stat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBUpgradeInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float current_stat = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.current_stat_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated .PBItemData upgrade_req = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_upgrade_req(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBUpgradeInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBUpgradeInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float current_stat = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_current_stat = this->_internal_current_stat();
  uint32_t raw_current_stat;
  memcpy(&raw_current_stat, &tmp_current_stat, sizeof(tmp_current_stat));
  if (raw_current_stat != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_current_stat(), target);
  }

  // repeated .PBItemData upgrade_req = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_upgrade_req_size()); i < n; i++) {
    const auto& repfield = this->_internal_upgrade_req(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBUpgradeInfo)
  return target;
}

size_t PBUpgradeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBUpgradeInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBItemData upgrade_req = 4;
  total_size += 1UL * this->_internal_upgrade_req_size();
  for (const auto& msg : this->_impl_.upgrade_req_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // float current_stat = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_current_stat = this->_internal_current_stat();
  uint32_t raw_current_stat;
  memcpy(&raw_current_stat, &tmp_current_stat, sizeof(tmp_current_stat));
  if (raw_current_stat != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBUpgradeInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBUpgradeInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBUpgradeInfo::GetClassData() const { return &_class_data_; }


void PBUpgradeInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBUpgradeInfo*>(&to_msg);
  auto& from = static_cast<const PBUpgradeInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBUpgradeInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.upgrade_req_.MergeFrom(from._impl_.upgrade_req_);
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_current_stat = from._internal_current_stat();
  uint32_t raw_current_stat;
  memcpy(&raw_current_stat, &tmp_current_stat, sizeof(tmp_current_stat));
  if (raw_current_stat != 0) {
    _this->_internal_set_current_stat(from._internal_current_stat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBUpgradeInfo::CopyFrom(const PBUpgradeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBUpgradeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBUpgradeInfo::IsInitialized() const {
  return true;
}

void PBUpgradeInfo::InternalSwap(PBUpgradeInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.upgrade_req_.InternalSwap(&other->_impl_.upgrade_req_);
  swap(_impl_.current_stat_, other->_impl_.current_stat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBUpgradeInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_interaction_2eproto_getter, &descriptor_table_interaction_2eproto_once,
      file_level_metadata_interaction_2eproto[3]);
}

// ===================================================================

class PBZoneAccessInteraction::_Internal {
 public:
};

PBZoneAccessInteraction::PBZoneAccessInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBZoneAccessInteraction)
}
PBZoneAccessInteraction::PBZoneAccessInteraction(const PBZoneAccessInteraction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBZoneAccessInteraction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unlock_info_){from._impl_.unlock_info_}
    , decltype(_impl_.next_loc_){}
    , decltype(_impl_.needs_database_){}
    , decltype(_impl_.unlock_level_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.next_loc_, &from._impl_.next_loc_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.unlock_level_) -
    reinterpret_cast<char*>(&_impl_.next_loc_)) + sizeof(_impl_.unlock_level_));
  // @@protoc_insertion_point(copy_constructor:PBZoneAccessInteraction)
}

inline void PBZoneAccessInteraction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.unlock_info_){arena}
    , decltype(_impl_.next_loc_){0}
    , decltype(_impl_.needs_database_){false}
    , decltype(_impl_.unlock_level_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PBZoneAccessInteraction::~PBZoneAccessInteraction() {
  // @@protoc_insertion_point(destructor:PBZoneAccessInteraction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBZoneAccessInteraction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unlock_info_.~RepeatedPtrField();
}

void PBZoneAccessInteraction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBZoneAccessInteraction::Clear() {
// @@protoc_insertion_point(message_clear_start:PBZoneAccessInteraction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unlock_info_.Clear();
  ::memset(&_impl_.next_loc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.unlock_level_) -
      reinterpret_cast<char*>(&_impl_.next_loc_)) + sizeof(_impl_.unlock_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBZoneAccessInteraction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .PBLocationID next_loc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_next_loc(static_cast<::PBLocationID>(val));
        } else
          goto handle_unusual;
        continue;
      // bool needs_database = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.needs_database_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .PBUpgradeInfo unlock_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_unlock_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 unlock_level = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.unlock_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBZoneAccessInteraction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBZoneAccessInteraction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBLocationID next_loc = 1;
  if (this->_internal_next_loc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_next_loc(), target);
  }

  // bool needs_database = 2;
  if (this->_internal_needs_database() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_needs_database(), target);
  }

  // repeated .PBUpgradeInfo unlock_info = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_unlock_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_unlock_info(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 unlock_level = 4;
  if (this->_internal_unlock_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_unlock_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBZoneAccessInteraction)
  return target;
}

size_t PBZoneAccessInteraction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBZoneAccessInteraction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBUpgradeInfo unlock_info = 3;
  total_size += 1UL * this->_internal_unlock_info_size();
  for (const auto& msg : this->_impl_.unlock_info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .PBLocationID next_loc = 1;
  if (this->_internal_next_loc() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_next_loc());
  }

  // bool needs_database = 2;
  if (this->_internal_needs_database() != 0) {
    total_size += 1 + 1;
  }

  // int32 unlock_level = 4;
  if (this->_internal_unlock_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_unlock_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBZoneAccessInteraction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBZoneAccessInteraction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBZoneAccessInteraction::GetClassData() const { return &_class_data_; }


void PBZoneAccessInteraction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBZoneAccessInteraction*>(&to_msg);
  auto& from = static_cast<const PBZoneAccessInteraction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBZoneAccessInteraction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.unlock_info_.MergeFrom(from._impl_.unlock_info_);
  if (from._internal_next_loc() != 0) {
    _this->_internal_set_next_loc(from._internal_next_loc());
  }
  if (from._internal_needs_database() != 0) {
    _this->_internal_set_needs_database(from._internal_needs_database());
  }
  if (from._internal_unlock_level() != 0) {
    _this->_internal_set_unlock_level(from._internal_unlock_level());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBZoneAccessInteraction::CopyFrom(const PBZoneAccessInteraction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBZoneAccessInteraction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBZoneAccessInteraction::IsInitialized() const {
  return true;
}

void PBZoneAccessInteraction::InternalSwap(PBZoneAccessInteraction* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.unlock_info_.InternalSwap(&other->_impl_.unlock_info_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBZoneAccessInteraction, _impl_.unlock_level_)
      + sizeof(PBZoneAccessInteraction::_impl_.unlock_level_)
      - PROTOBUF_FIELD_OFFSET(PBZoneAccessInteraction, _impl_.next_loc_)>(
          reinterpret_cast<char*>(&_impl_.next_loc_),
          reinterpret_cast<char*>(&other->_impl_.next_loc_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBZoneAccessInteraction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_interaction_2eproto_getter, &descriptor_table_interaction_2eproto_once,
      file_level_metadata_interaction_2eproto[4]);
}

// ===================================================================

class PBShopInteraction::_Internal {
 public:
};

PBShopInteraction::PBShopInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:PBShopInteraction)
}
PBShopInteraction::PBShopInteraction(const PBShopInteraction& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PBShopInteraction* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PBShopInteraction)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBShopInteraction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBShopInteraction::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PBShopInteraction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_interaction_2eproto_getter, &descriptor_table_interaction_2eproto_once,
      file_level_metadata_interaction_2eproto[5]);
}

// ===================================================================

class PBDialogInteraction::_Internal {
 public:
};

PBDialogInteraction::PBDialogInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBDialogInteraction)
}
PBDialogInteraction::PBDialogInteraction(const PBDialogInteraction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBDialogInteraction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){from._impl_.info_}
    , decltype(_impl_.needs_database_){}
    , decltype(_impl_.current_dialog_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.needs_database_, &from._impl_.needs_database_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.current_dialog_) -
    reinterpret_cast<char*>(&_impl_.needs_database_)) + sizeof(_impl_.current_dialog_));
  // @@protoc_insertion_point(copy_constructor:PBDialogInteraction)
}

inline void PBDialogInteraction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){arena}
    , decltype(_impl_.needs_database_){false}
    , decltype(_impl_.current_dialog_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PBDialogInteraction::~PBDialogInteraction() {
  // @@protoc_insertion_point(destructor:PBDialogInteraction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBDialogInteraction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.info_.~RepeatedPtrField();
}

void PBDialogInteraction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBDialogInteraction::Clear() {
// @@protoc_insertion_point(message_clear_start:PBDialogInteraction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.info_.Clear();
  ::memset(&_impl_.needs_database_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.current_dialog_) -
      reinterpret_cast<char*>(&_impl_.needs_database_)) + sizeof(_impl_.current_dialog_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBDialogInteraction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool needs_database = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.needs_database_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .PBDialogInfo info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_info(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 current_dialog = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.current_dialog_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBDialogInteraction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBDialogInteraction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool needs_database = 1;
  if (this->_internal_needs_database() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_needs_database(), target);
  }

  // repeated .PBDialogInfo info = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_info(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 current_dialog = 3;
  if (this->_internal_current_dialog() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_current_dialog(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBDialogInteraction)
  return target;
}

size_t PBDialogInteraction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBDialogInteraction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBDialogInfo info = 2;
  total_size += 1UL * this->_internal_info_size();
  for (const auto& msg : this->_impl_.info_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool needs_database = 1;
  if (this->_internal_needs_database() != 0) {
    total_size += 1 + 1;
  }

  // int32 current_dialog = 3;
  if (this->_internal_current_dialog() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_current_dialog());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBDialogInteraction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBDialogInteraction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBDialogInteraction::GetClassData() const { return &_class_data_; }


void PBDialogInteraction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBDialogInteraction*>(&to_msg);
  auto& from = static_cast<const PBDialogInteraction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBDialogInteraction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.info_.MergeFrom(from._impl_.info_);
  if (from._internal_needs_database() != 0) {
    _this->_internal_set_needs_database(from._internal_needs_database());
  }
  if (from._internal_current_dialog() != 0) {
    _this->_internal_set_current_dialog(from._internal_current_dialog());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBDialogInteraction::CopyFrom(const PBDialogInteraction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBDialogInteraction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDialogInteraction::IsInitialized() const {
  return true;
}

void PBDialogInteraction::InternalSwap(PBDialogInteraction* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.info_.InternalSwap(&other->_impl_.info_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBDialogInteraction, _impl_.current_dialog_)
      + sizeof(PBDialogInteraction::_impl_.current_dialog_)
      - PROTOBUF_FIELD_OFFSET(PBDialogInteraction, _impl_.needs_database_)>(
          reinterpret_cast<char*>(&_impl_.needs_database_),
          reinterpret_cast<char*>(&other->_impl_.needs_database_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBDialogInteraction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_interaction_2eproto_getter, &descriptor_table_interaction_2eproto_once,
      file_level_metadata_interaction_2eproto[6]);
}

// ===================================================================

class PBDialogInfo::_Internal {
 public:
};

PBDialogInfo::PBDialogInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBDialogInfo)
}
PBDialogInfo::PBDialogInfo(const PBDialogInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBDialogInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.response_options_){from._impl_.response_options_}
    , decltype(_impl_.text_){}
    , decltype(_impl_.npc_image_){}
    , decltype(_impl_.more_text_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  _impl_.npc_image_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.npc_image_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_npc_image().empty()) {
    _this->_impl_.npc_image_.Set(from._internal_npc_image(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.more_text_ = from._impl_.more_text_;
  // @@protoc_insertion_point(copy_constructor:PBDialogInfo)
}

inline void PBDialogInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.response_options_){arena}
    , decltype(_impl_.text_){}
    , decltype(_impl_.npc_image_){}
    , decltype(_impl_.more_text_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.npc_image_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.npc_image_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBDialogInfo::~PBDialogInfo() {
  // @@protoc_insertion_point(destructor:PBDialogInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBDialogInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.response_options_.~RepeatedPtrField();
  _impl_.text_.Destroy();
  _impl_.npc_image_.Destroy();
}

void PBDialogInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBDialogInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBDialogInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.response_options_.Clear();
  _impl_.text_.ClearToEmpty();
  _impl_.npc_image_.ClearToEmpty();
  _impl_.more_text_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBDialogInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PBDialogInfo.text"));
        } else
          goto handle_unusual;
        continue;
      // string npc_image = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_npc_image();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PBDialogInfo.npc_image"));
        } else
          goto handle_unusual;
        continue;
      // bool more_text = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.more_text_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .PBResponseOption response_options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_response_options(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBDialogInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBDialogInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBDialogInfo.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // string npc_image = 2;
  if (!this->_internal_npc_image().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_npc_image().data(), static_cast<int>(this->_internal_npc_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBDialogInfo.npc_image");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_npc_image(), target);
  }

  // bool more_text = 3;
  if (this->_internal_more_text() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_more_text(), target);
  }

  // repeated .PBResponseOption response_options = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_response_options_size()); i < n; i++) {
    const auto& repfield = this->_internal_response_options(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBDialogInfo)
  return target;
}

size_t PBDialogInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBDialogInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PBResponseOption response_options = 4;
  total_size += 1UL * this->_internal_response_options_size();
  for (const auto& msg : this->_impl_.response_options_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // string npc_image = 2;
  if (!this->_internal_npc_image().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_npc_image());
  }

  // bool more_text = 3;
  if (this->_internal_more_text() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBDialogInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBDialogInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBDialogInfo::GetClassData() const { return &_class_data_; }


void PBDialogInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBDialogInfo*>(&to_msg);
  auto& from = static_cast<const PBDialogInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBDialogInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.response_options_.MergeFrom(from._impl_.response_options_);
  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (!from._internal_npc_image().empty()) {
    _this->_internal_set_npc_image(from._internal_npc_image());
  }
  if (from._internal_more_text() != 0) {
    _this->_internal_set_more_text(from._internal_more_text());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBDialogInfo::CopyFrom(const PBDialogInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBDialogInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDialogInfo::IsInitialized() const {
  return true;
}

void PBDialogInfo::InternalSwap(PBDialogInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.response_options_.InternalSwap(&other->_impl_.response_options_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.npc_image_, lhs_arena,
      &other->_impl_.npc_image_, rhs_arena
  );
  swap(_impl_.more_text_, other->_impl_.more_text_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBDialogInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_interaction_2eproto_getter, &descriptor_table_interaction_2eproto_once,
      file_level_metadata_interaction_2eproto[7]);
}

// ===================================================================

class PBResponseOption::_Internal {
 public:
};

PBResponseOption::PBResponseOption(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBResponseOption)
}
PBResponseOption::PBResponseOption(const PBResponseOption& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBResponseOption* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.next_text_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.next_text_ = from._impl_.next_text_;
  // @@protoc_insertion_point(copy_constructor:PBResponseOption)
}

inline void PBResponseOption::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.next_text_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBResponseOption::~PBResponseOption() {
  // @@protoc_insertion_point(destructor:PBResponseOption)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBResponseOption::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
}

void PBResponseOption::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBResponseOption::Clear() {
// @@protoc_insertion_point(message_clear_start:PBResponseOption)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _impl_.next_text_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBResponseOption::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PBResponseOption.text"));
        } else
          goto handle_unusual;
        continue;
      // int32 next_text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.next_text_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBResponseOption::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBResponseOption)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBResponseOption.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // int32 next_text = 2;
  if (this->_internal_next_text() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_next_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBResponseOption)
  return target;
}

size_t PBResponseOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBResponseOption)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // int32 next_text = 2;
  if (this->_internal_next_text() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_next_text());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBResponseOption::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBResponseOption::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBResponseOption::GetClassData() const { return &_class_data_; }


void PBResponseOption::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBResponseOption*>(&to_msg);
  auto& from = static_cast<const PBResponseOption&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBResponseOption)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_next_text() != 0) {
    _this->_internal_set_next_text(from._internal_next_text());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBResponseOption::CopyFrom(const PBResponseOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBResponseOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBResponseOption::IsInitialized() const {
  return true;
}

void PBResponseOption::InternalSwap(PBResponseOption* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  swap(_impl_.next_text_, other->_impl_.next_text_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PBResponseOption::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_interaction_2eproto_getter, &descriptor_table_interaction_2eproto_once,
      file_level_metadata_interaction_2eproto[8]);
}

// ===================================================================

class PBQuestInteraction::_Internal {
 public:
};

PBQuestInteraction::PBQuestInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:PBQuestInteraction)
}
PBQuestInteraction::PBQuestInteraction(const PBQuestInteraction& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PBQuestInteraction* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PBQuestInteraction)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBQuestInteraction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBQuestInteraction::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PBQuestInteraction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_interaction_2eproto_getter, &descriptor_table_interaction_2eproto_once,
      file_level_metadata_interaction_2eproto[9]);
}

// ===================================================================

class PBCustomInteraction::_Internal {
 public:
};

PBCustomInteraction::PBCustomInteraction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:PBCustomInteraction)
}
PBCustomInteraction::PBCustomInteraction(const PBCustomInteraction& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PBCustomInteraction* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PBCustomInteraction)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBCustomInteraction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBCustomInteraction::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PBCustomInteraction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_interaction_2eproto_getter, &descriptor_table_interaction_2eproto_once,
      file_level_metadata_interaction_2eproto[10]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PBInteraction*
Arena::CreateMaybeMessage< ::PBInteraction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBInteraction >(arena);
}
template<> PROTOBUF_NOINLINE ::PBPostInteraction*
Arena::CreateMaybeMessage< ::PBPostInteraction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBPostInteraction >(arena);
}
template<> PROTOBUF_NOINLINE ::PBUpgrades*
Arena::CreateMaybeMessage< ::PBUpgrades >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBUpgrades >(arena);
}
template<> PROTOBUF_NOINLINE ::PBUpgradeInfo*
Arena::CreateMaybeMessage< ::PBUpgradeInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBUpgradeInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::PBZoneAccessInteraction*
Arena::CreateMaybeMessage< ::PBZoneAccessInteraction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBZoneAccessInteraction >(arena);
}
template<> PROTOBUF_NOINLINE ::PBShopInteraction*
Arena::CreateMaybeMessage< ::PBShopInteraction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBShopInteraction >(arena);
}
template<> PROTOBUF_NOINLINE ::PBDialogInteraction*
Arena::CreateMaybeMessage< ::PBDialogInteraction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBDialogInteraction >(arena);
}
template<> PROTOBUF_NOINLINE ::PBDialogInfo*
Arena::CreateMaybeMessage< ::PBDialogInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBDialogInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::PBResponseOption*
Arena::CreateMaybeMessage< ::PBResponseOption >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBResponseOption >(arena);
}
template<> PROTOBUF_NOINLINE ::PBQuestInteraction*
Arena::CreateMaybeMessage< ::PBQuestInteraction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBQuestInteraction >(arena);
}
template<> PROTOBUF_NOINLINE ::PBCustomInteraction*
Arena::CreateMaybeMessage< ::PBCustomInteraction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBCustomInteraction >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
